/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { LnrpcFloatMetric } from './LnrpcFloatMetric';
import { HttpFile } from '../http/http';

export class LnrpcNodeMetricsResponse {
    /**
    * Betweenness centrality is the sum of the ratio of shortest paths that pass through the node for each pair of nodes in the graph (not counting paths starting or ending at this node). Map of node pubkey to betweenness centrality of the node. Normalized values are in the [0,1] closed interval.
    */
    'betweennessCentrality'?: { [key: string]: LnrpcFloatMetric; };

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "betweennessCentrality",
            "baseName": "betweenness_centrality",
            "type": "{ [key: string]: LnrpcFloatMetric; }",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return LnrpcNodeMetricsResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

