/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class LnrpcChannelConstraints {
    /**
    * The CSV delay expressed in relative blocks. If the channel is force closed, we will need to wait for this many blocks before we can regain our funds.
    */
    'csvDelay'?: number;
    /**
    * The minimum satoshis this node is required to reserve in its balance.
    */
    'chanReserveSat'?: string;
    /**
    * The dust limit (in satoshis) of the initiator's commitment tx.
    */
    'dustLimitSat'?: string;
    /**
    * The maximum amount of coins in millisatoshis that can be pending in this channel.
    */
    'maxPendingAmtMsat'?: string;
    /**
    * The smallest HTLC in millisatoshis that the initiator will accept.
    */
    'minHtlcMsat'?: string;
    /**
    * The total number of incoming HTLC's that the initiator will accept.
    */
    'maxAcceptedHtlcs'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "csvDelay",
            "baseName": "csv_delay",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "chanReserveSat",
            "baseName": "chan_reserve_sat",
            "type": "string",
            "format": "uint64"
        },
        {
            "name": "dustLimitSat",
            "baseName": "dust_limit_sat",
            "type": "string",
            "format": "uint64"
        },
        {
            "name": "maxPendingAmtMsat",
            "baseName": "max_pending_amt_msat",
            "type": "string",
            "format": "uint64"
        },
        {
            "name": "minHtlcMsat",
            "baseName": "min_htlc_msat",
            "type": "string",
            "format": "uint64"
        },
        {
            "name": "maxAcceptedHtlcs",
            "baseName": "max_accepted_htlcs",
            "type": "number",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return LnrpcChannelConstraints.attributeTypeMap;
    }

    public constructor() {
    }
}

