/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Details specific to AMP HTLCs.
*/
export class LnrpcAMP {
    /**
    * An n-of-n secret share of the root seed from which child payment hashes and preimages are derived.
    */
    'rootShare'?: string;
    /**
    * An identifier for the HTLC set that this HTLC belongs to.
    */
    'setId'?: string;
    /**
    * A nonce used to randomize the child preimage and child hash from a given root_share.
    */
    'childIndex'?: number;
    /**
    * The payment hash of the AMP HTLC.
    */
    'hash'?: string;
    /**
    * The preimage used to settle this AMP htlc. This field will only be populated if the invoice is in InvoiceState_ACCEPTED or InvoiceState_SETTLED.
    */
    'preimage'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "rootShare",
            "baseName": "root_share",
            "type": "string",
            "format": "byte"
        },
        {
            "name": "setId",
            "baseName": "set_id",
            "type": "string",
            "format": "byte"
        },
        {
            "name": "childIndex",
            "baseName": "child_index",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "hash",
            "baseName": "hash",
            "type": "string",
            "format": "byte"
        },
        {
            "name": "preimage",
            "baseName": "preimage",
            "type": "string",
            "format": "byte"
        }    ];

    static getAttributeTypeMap() {
        return LnrpcAMP.attributeTypeMap;
    }

    public constructor() {
    }
}

