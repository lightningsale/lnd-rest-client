/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { LnrpcAMP } from './LnrpcAMP';
import { LnrpcInvoiceHTLCState } from './LnrpcInvoiceHTLCState';
import { HttpFile } from '../http/http';

export class LnrpcInvoiceHTLC {
    /**
    * Short channel id over which the htlc was received.
    */
    'chanId'?: string;
    /**
    * Index identifying the htlc on the channel.
    */
    'htlcIndex'?: string;
    /**
    * The amount of the htlc in msat.
    */
    'amtMsat'?: string;
    /**
    * Block height at which this htlc was accepted.
    */
    'acceptHeight'?: number;
    /**
    * Time at which this htlc was accepted.
    */
    'acceptTime'?: string;
    /**
    * Time at which this htlc was settled or canceled.
    */
    'resolveTime'?: string;
    /**
    * Block height at which this htlc expires.
    */
    'expiryHeight'?: number;
    'state'?: LnrpcInvoiceHTLCState;
    /**
    * Custom tlv records.
    */
    'customRecords'?: { [key: string]: string; };
    /**
    * The total amount of the mpp payment in msat.
    */
    'mppTotalAmtMsat'?: string;
    'amp'?: LnrpcAMP;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "chanId",
            "baseName": "chan_id",
            "type": "string",
            "format": "uint64"
        },
        {
            "name": "htlcIndex",
            "baseName": "htlc_index",
            "type": "string",
            "format": "uint64"
        },
        {
            "name": "amtMsat",
            "baseName": "amt_msat",
            "type": "string",
            "format": "uint64"
        },
        {
            "name": "acceptHeight",
            "baseName": "accept_height",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "acceptTime",
            "baseName": "accept_time",
            "type": "string",
            "format": "int64"
        },
        {
            "name": "resolveTime",
            "baseName": "resolve_time",
            "type": "string",
            "format": "int64"
        },
        {
            "name": "expiryHeight",
            "baseName": "expiry_height",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "LnrpcInvoiceHTLCState",
            "format": ""
        },
        {
            "name": "customRecords",
            "baseName": "custom_records",
            "type": "{ [key: string]: string; }",
            "format": "byte"
        },
        {
            "name": "mppTotalAmtMsat",
            "baseName": "mpp_total_amt_msat",
            "type": "string",
            "format": "uint64"
        },
        {
            "name": "amp",
            "baseName": "amp",
            "type": "LnrpcAMP",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return LnrpcInvoiceHTLC.attributeTypeMap;
    }

    public constructor() {
    }
}

