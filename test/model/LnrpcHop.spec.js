/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.lnd);
  }
}(this, function(expect, lnd) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new lnd.LnrpcHop();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LnrpcHop', function() {
    it('should create an instance of LnrpcHop', function() {
      // uncomment below and update the code to test LnrpcHop
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be.a(lnd.LnrpcHop);
    });

    it('should have the property chanId (base name: "chan_id")', function() {
      // uncomment below and update the code to test the property chanId
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

    it('should have the property chanCapacity (base name: "chan_capacity")', function() {
      // uncomment below and update the code to test the property chanCapacity
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

    it('should have the property amtToForward (base name: "amt_to_forward")', function() {
      // uncomment below and update the code to test the property amtToForward
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

    it('should have the property fee (base name: "fee")', function() {
      // uncomment below and update the code to test the property fee
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

    it('should have the property expiry (base name: "expiry")', function() {
      // uncomment below and update the code to test the property expiry
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

    it('should have the property amtToForwardMsat (base name: "amt_to_forward_msat")', function() {
      // uncomment below and update the code to test the property amtToForwardMsat
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

    it('should have the property feeMsat (base name: "fee_msat")', function() {
      // uncomment below and update the code to test the property feeMsat
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

    it('should have the property pubKey (base name: "pub_key")', function() {
      // uncomment below and update the code to test the property pubKey
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

    it('should have the property tlvPayload (base name: "tlv_payload")', function() {
      // uncomment below and update the code to test the property tlvPayload
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

    it('should have the property mppRecord (base name: "mpp_record")', function() {
      // uncomment below and update the code to test the property mppRecord
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

    it('should have the property ampRecord (base name: "amp_record")', function() {
      // uncomment below and update the code to test the property ampRecord
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

    it('should have the property customRecords (base name: "custom_records")', function() {
      // uncomment below and update the code to test the property customRecords
      //var instance = new lnd.LnrpcHop();
      //expect(instance).to.be();
    });

  });

}));
