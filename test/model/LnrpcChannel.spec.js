/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.lnd);
  }
}(this, function(expect, lnd) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new lnd.LnrpcChannel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LnrpcChannel', function() {
    it('should create an instance of LnrpcChannel', function() {
      // uncomment below and update the code to test LnrpcChannel
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be.a(lnd.LnrpcChannel);
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property remotePubkey (base name: "remote_pubkey")', function() {
      // uncomment below and update the code to test the property remotePubkey
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property channelPoint (base name: "channel_point")', function() {
      // uncomment below and update the code to test the property channelPoint
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property chanId (base name: "chan_id")', function() {
      // uncomment below and update the code to test the property chanId
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property capacity (base name: "capacity")', function() {
      // uncomment below and update the code to test the property capacity
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property localBalance (base name: "local_balance")', function() {
      // uncomment below and update the code to test the property localBalance
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property remoteBalance (base name: "remote_balance")', function() {
      // uncomment below and update the code to test the property remoteBalance
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property commitFee (base name: "commit_fee")', function() {
      // uncomment below and update the code to test the property commitFee
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property commitWeight (base name: "commit_weight")', function() {
      // uncomment below and update the code to test the property commitWeight
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property feePerKw (base name: "fee_per_kw")', function() {
      // uncomment below and update the code to test the property feePerKw
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property unsettledBalance (base name: "unsettled_balance")', function() {
      // uncomment below and update the code to test the property unsettledBalance
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property totalSatoshisSent (base name: "total_satoshis_sent")', function() {
      // uncomment below and update the code to test the property totalSatoshisSent
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property totalSatoshisReceived (base name: "total_satoshis_received")', function() {
      // uncomment below and update the code to test the property totalSatoshisReceived
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property numUpdates (base name: "num_updates")', function() {
      // uncomment below and update the code to test the property numUpdates
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property pendingHtlcs (base name: "pending_htlcs")', function() {
      // uncomment below and update the code to test the property pendingHtlcs
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property csvDelay (base name: "csv_delay")', function() {
      // uncomment below and update the code to test the property csvDelay
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property _private (base name: "private")', function() {
      // uncomment below and update the code to test the property _private
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property initiator (base name: "initiator")', function() {
      // uncomment below and update the code to test the property initiator
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property chanStatusFlags (base name: "chan_status_flags")', function() {
      // uncomment below and update the code to test the property chanStatusFlags
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property localChanReserveSat (base name: "local_chan_reserve_sat")', function() {
      // uncomment below and update the code to test the property localChanReserveSat
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property remoteChanReserveSat (base name: "remote_chan_reserve_sat")', function() {
      // uncomment below and update the code to test the property remoteChanReserveSat
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property staticRemoteKey (base name: "static_remote_key")', function() {
      // uncomment below and update the code to test the property staticRemoteKey
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property commitmentType (base name: "commitment_type")', function() {
      // uncomment below and update the code to test the property commitmentType
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property lifetime (base name: "lifetime")', function() {
      // uncomment below and update the code to test the property lifetime
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property uptime (base name: "uptime")', function() {
      // uncomment below and update the code to test the property uptime
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property closeAddress (base name: "close_address")', function() {
      // uncomment below and update the code to test the property closeAddress
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property pushAmountSat (base name: "push_amount_sat")', function() {
      // uncomment below and update the code to test the property pushAmountSat
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property thawHeight (base name: "thaw_height")', function() {
      // uncomment below and update the code to test the property thawHeight
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property localConstraints (base name: "local_constraints")', function() {
      // uncomment below and update the code to test the property localConstraints
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

    it('should have the property remoteConstraints (base name: "remote_constraints")', function() {
      // uncomment below and update the code to test the property remoteConstraints
      //var instance = new lnd.LnrpcChannel();
      //expect(instance).to.be();
    });

  });

}));
