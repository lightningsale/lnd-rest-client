/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.lnd);
  }
}(this, function(expect, lnd) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new lnd.LnrpcOpenChannelRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LnrpcOpenChannelRequest', function() {
    it('should create an instance of LnrpcOpenChannelRequest', function() {
      // uncomment below and update the code to test LnrpcOpenChannelRequest
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be.a(lnd.LnrpcOpenChannelRequest);
    });

    it('should have the property satPerVbyte (base name: "sat_per_vbyte")', function() {
      // uncomment below and update the code to test the property satPerVbyte
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property nodePubkey (base name: "node_pubkey")', function() {
      // uncomment below and update the code to test the property nodePubkey
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property nodePubkeyString (base name: "node_pubkey_string")', function() {
      // uncomment below and update the code to test the property nodePubkeyString
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property localFundingAmount (base name: "local_funding_amount")', function() {
      // uncomment below and update the code to test the property localFundingAmount
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property pushSat (base name: "push_sat")', function() {
      // uncomment below and update the code to test the property pushSat
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property targetConf (base name: "target_conf")', function() {
      // uncomment below and update the code to test the property targetConf
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property satPerByte (base name: "sat_per_byte")', function() {
      // uncomment below and update the code to test the property satPerByte
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property _private (base name: "private")', function() {
      // uncomment below and update the code to test the property _private
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property minHtlcMsat (base name: "min_htlc_msat")', function() {
      // uncomment below and update the code to test the property minHtlcMsat
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property remoteCsvDelay (base name: "remote_csv_delay")', function() {
      // uncomment below and update the code to test the property remoteCsvDelay
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property minConfs (base name: "min_confs")', function() {
      // uncomment below and update the code to test the property minConfs
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property spendUnconfirmed (base name: "spend_unconfirmed")', function() {
      // uncomment below and update the code to test the property spendUnconfirmed
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property closeAddress (base name: "close_address")', function() {
      // uncomment below and update the code to test the property closeAddress
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property fundingShim (base name: "funding_shim")', function() {
      // uncomment below and update the code to test the property fundingShim
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property remoteMaxValueInFlightMsat (base name: "remote_max_value_in_flight_msat")', function() {
      // uncomment below and update the code to test the property remoteMaxValueInFlightMsat
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property remoteMaxHtlcs (base name: "remote_max_htlcs")', function() {
      // uncomment below and update the code to test the property remoteMaxHtlcs
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property maxLocalCsv (base name: "max_local_csv")', function() {
      // uncomment below and update the code to test the property maxLocalCsv
      //var instance = new lnd.LnrpcOpenChannelRequest();
      //expect(instance).to.be();
    });

  });

}));
