/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LnrpcForwardingEvent
 */
export interface LnrpcForwardingEvent {
    /**
     * Timestamp is the time (unix epoch offset) that this circuit was
     * completed. Deprecated by timestamp_ns.
     * @type {string}
     * @memberof LnrpcForwardingEvent
     */
    timestamp?: string;
    /**
     * The incoming channel ID that carried the HTLC that created the circuit.
     * @type {string}
     * @memberof LnrpcForwardingEvent
     */
    chanIdIn?: string;
    /**
     * The outgoing channel ID that carried the preimage that completed the
     * circuit.
     * @type {string}
     * @memberof LnrpcForwardingEvent
     */
    chanIdOut?: string;
    /**
     * The total amount (in satoshis) of the incoming HTLC that created half
     * the circuit.
     * @type {string}
     * @memberof LnrpcForwardingEvent
     */
    amtIn?: string;
    /**
     * The total amount (in satoshis) of the outgoing HTLC that created the
     * second half of the circuit.
     * @type {string}
     * @memberof LnrpcForwardingEvent
     */
    amtOut?: string;
    /**
     * The total fee (in satoshis) that this payment circuit carried.
     * @type {string}
     * @memberof LnrpcForwardingEvent
     */
    fee?: string;
    /**
     * The total fee (in milli-satoshis) that this payment circuit carried.
     * @type {string}
     * @memberof LnrpcForwardingEvent
     */
    feeMsat?: string;
    /**
     * The total amount (in milli-satoshis) of the incoming HTLC that created
     * half the circuit.
     * @type {string}
     * @memberof LnrpcForwardingEvent
     */
    amtInMsat?: string;
    /**
     * The total amount (in milli-satoshis) of the outgoing HTLC that created
     * the second half of the circuit.
     * @type {string}
     * @memberof LnrpcForwardingEvent
     */
    amtOutMsat?: string;
    /**
     * The number of nanoseconds elapsed since January 1, 1970 UTC when this
     * circuit was completed.
     * @type {string}
     * @memberof LnrpcForwardingEvent
     */
    timestampNs?: string;
}

export function LnrpcForwardingEventFromJSON(json: any): LnrpcForwardingEvent {
    return LnrpcForwardingEventFromJSONTyped(json, false);
}

export function LnrpcForwardingEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): LnrpcForwardingEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
        'chanIdIn': !exists(json, 'chan_id_in') ? undefined : json['chan_id_in'],
        'chanIdOut': !exists(json, 'chan_id_out') ? undefined : json['chan_id_out'],
        'amtIn': !exists(json, 'amt_in') ? undefined : json['amt_in'],
        'amtOut': !exists(json, 'amt_out') ? undefined : json['amt_out'],
        'fee': !exists(json, 'fee') ? undefined : json['fee'],
        'feeMsat': !exists(json, 'fee_msat') ? undefined : json['fee_msat'],
        'amtInMsat': !exists(json, 'amt_in_msat') ? undefined : json['amt_in_msat'],
        'amtOutMsat': !exists(json, 'amt_out_msat') ? undefined : json['amt_out_msat'],
        'timestampNs': !exists(json, 'timestamp_ns') ? undefined : json['timestamp_ns'],
    };
}

export function LnrpcForwardingEventToJSON(value?: LnrpcForwardingEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'timestamp': value.timestamp,
        'chan_id_in': value.chanIdIn,
        'chan_id_out': value.chanIdOut,
        'amt_in': value.amtIn,
        'amt_out': value.amtOut,
        'fee': value.fee,
        'fee_msat': value.feeMsat,
        'amt_in_msat': value.amtInMsat,
        'amt_out_msat': value.amtOutMsat,
        'timestamp_ns': value.timestampNs,
    };
}

