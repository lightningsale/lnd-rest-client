/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PendingChannelsResponseClosedChannel,
    PendingChannelsResponseClosedChannelFromJSON,
    PendingChannelsResponseClosedChannelFromJSONTyped,
    PendingChannelsResponseClosedChannelToJSON,
    PendingChannelsResponseForceClosedChannel,
    PendingChannelsResponseForceClosedChannelFromJSON,
    PendingChannelsResponseForceClosedChannelFromJSONTyped,
    PendingChannelsResponseForceClosedChannelToJSON,
    PendingChannelsResponsePendingOpenChannel,
    PendingChannelsResponsePendingOpenChannelFromJSON,
    PendingChannelsResponsePendingOpenChannelFromJSONTyped,
    PendingChannelsResponsePendingOpenChannelToJSON,
    PendingChannelsResponseWaitingCloseChannel,
    PendingChannelsResponseWaitingCloseChannelFromJSON,
    PendingChannelsResponseWaitingCloseChannelFromJSONTyped,
    PendingChannelsResponseWaitingCloseChannelToJSON,
} from './';

/**
 * 
 * @export
 * @interface LnrpcPendingChannelsResponse
 */
export interface LnrpcPendingChannelsResponse {
    /**
     * 
     * @type {string}
     * @memberof LnrpcPendingChannelsResponse
     */
    totalLimboBalance?: string;
    /**
     * 
     * @type {Array<PendingChannelsResponsePendingOpenChannel>}
     * @memberof LnrpcPendingChannelsResponse
     */
    pendingOpenChannels?: Array<PendingChannelsResponsePendingOpenChannel>;
    /**
     * Deprecated: Channels pending closing previously contained cooperatively
     * closed channels with a single confirmation. These channels are now
     * considered closed from the time we see them on chain.
     * @type {Array<PendingChannelsResponseClosedChannel>}
     * @memberof LnrpcPendingChannelsResponse
     */
    pendingClosingChannels?: Array<PendingChannelsResponseClosedChannel>;
    /**
     * 
     * @type {Array<PendingChannelsResponseForceClosedChannel>}
     * @memberof LnrpcPendingChannelsResponse
     */
    pendingForceClosingChannels?: Array<PendingChannelsResponseForceClosedChannel>;
    /**
     * 
     * @type {Array<PendingChannelsResponseWaitingCloseChannel>}
     * @memberof LnrpcPendingChannelsResponse
     */
    waitingCloseChannels?: Array<PendingChannelsResponseWaitingCloseChannel>;
}

export function LnrpcPendingChannelsResponseFromJSON(json: any): LnrpcPendingChannelsResponse {
    return LnrpcPendingChannelsResponseFromJSONTyped(json, false);
}

export function LnrpcPendingChannelsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LnrpcPendingChannelsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalLimboBalance': !exists(json, 'total_limbo_balance') ? undefined : json['total_limbo_balance'],
        'pendingOpenChannels': !exists(json, 'pending_open_channels') ? undefined : ((json['pending_open_channels'] as Array<any>).map(PendingChannelsResponsePendingOpenChannelFromJSON)),
        'pendingClosingChannels': !exists(json, 'pending_closing_channels') ? undefined : ((json['pending_closing_channels'] as Array<any>).map(PendingChannelsResponseClosedChannelFromJSON)),
        'pendingForceClosingChannels': !exists(json, 'pending_force_closing_channels') ? undefined : ((json['pending_force_closing_channels'] as Array<any>).map(PendingChannelsResponseForceClosedChannelFromJSON)),
        'waitingCloseChannels': !exists(json, 'waiting_close_channels') ? undefined : ((json['waiting_close_channels'] as Array<any>).map(PendingChannelsResponseWaitingCloseChannelFromJSON)),
    };
}

export function LnrpcPendingChannelsResponseToJSON(value?: LnrpcPendingChannelsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total_limbo_balance': value.totalLimboBalance,
        'pending_open_channels': value.pendingOpenChannels === undefined ? undefined : ((value.pendingOpenChannels as Array<any>).map(PendingChannelsResponsePendingOpenChannelToJSON)),
        'pending_closing_channels': value.pendingClosingChannels === undefined ? undefined : ((value.pendingClosingChannels as Array<any>).map(PendingChannelsResponseClosedChannelToJSON)),
        'pending_force_closing_channels': value.pendingForceClosingChannels === undefined ? undefined : ((value.pendingForceClosingChannels as Array<any>).map(PendingChannelsResponseForceClosedChannelToJSON)),
        'waiting_close_channels': value.waitingCloseChannels === undefined ? undefined : ((value.waitingCloseChannels as Array<any>).map(PendingChannelsResponseWaitingCloseChannelToJSON)),
    };
}

