/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *  - RESERVED: The numbers assigned in this enumeration match the failure codes as
 * defined in BOLT #4. Because protobuf 3 requires enums to start with 0,
 * a RESERVED value is added.
 *  - INTERNAL_FAILURE: An internal error occurred.
 *  - UNKNOWN_FAILURE: The error source is known, but the failure itself couldn't be decoded.
 *  - UNREADABLE_FAILURE: An unreadable failure result is returned if the received failure message
 * cannot be decrypted. In that case the error source is unknown.
 * @export
 * @enum {string}
 */
export enum FailureFailureCode {
    Reserved = 'RESERVED',
    IncorrectOrUnknownPaymentDetails = 'INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS',
    IncorrectPaymentAmount = 'INCORRECT_PAYMENT_AMOUNT',
    FinalIncorrectCltvExpiry = 'FINAL_INCORRECT_CLTV_EXPIRY',
    FinalIncorrectHtlcAmount = 'FINAL_INCORRECT_HTLC_AMOUNT',
    FinalExpiryTooSoon = 'FINAL_EXPIRY_TOO_SOON',
    InvalidRealm = 'INVALID_REALM',
    ExpiryTooSoon = 'EXPIRY_TOO_SOON',
    InvalidOnionVersion = 'INVALID_ONION_VERSION',
    InvalidOnionHmac = 'INVALID_ONION_HMAC',
    InvalidOnionKey = 'INVALID_ONION_KEY',
    AmountBelowMinimum = 'AMOUNT_BELOW_MINIMUM',
    FeeInsufficient = 'FEE_INSUFFICIENT',
    IncorrectCltvExpiry = 'INCORRECT_CLTV_EXPIRY',
    ChannelDisabled = 'CHANNEL_DISABLED',
    TemporaryChannelFailure = 'TEMPORARY_CHANNEL_FAILURE',
    RequiredNodeFeatureMissing = 'REQUIRED_NODE_FEATURE_MISSING',
    RequiredChannelFeatureMissing = 'REQUIRED_CHANNEL_FEATURE_MISSING',
    UnknownNextPeer = 'UNKNOWN_NEXT_PEER',
    TemporaryNodeFailure = 'TEMPORARY_NODE_FAILURE',
    PermanentNodeFailure = 'PERMANENT_NODE_FAILURE',
    PermanentChannelFailure = 'PERMANENT_CHANNEL_FAILURE',
    ExpiryTooFar = 'EXPIRY_TOO_FAR',
    MppTimeout = 'MPP_TIMEOUT',
    InvalidOnionPayload = 'INVALID_ONION_PAYLOAD',
    InternalFailure = 'INTERNAL_FAILURE',
    UnknownFailure = 'UNKNOWN_FAILURE',
    UnreadableFailure = 'UNREADABLE_FAILURE'
}

export function FailureFailureCodeFromJSON(json: any): FailureFailureCode {
    return FailureFailureCodeFromJSONTyped(json, false);
}

export function FailureFailureCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FailureFailureCode {
    return json as FailureFailureCode;
}

export function FailureFailureCodeToJSON(value?: FailureFailureCode | null): any {
    return value as any;
}

