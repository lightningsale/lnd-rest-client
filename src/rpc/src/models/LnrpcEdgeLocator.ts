/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LnrpcEdgeLocator
 */
export interface LnrpcEdgeLocator {
    /**
     * The short channel id of this edge.
     * @type {string}
     * @memberof LnrpcEdgeLocator
     */
    channelId?: string;
    /**
     * The direction of this edge. If direction_reverse is false, the direction
     * of this edge is from the channel endpoint with the lexicographically smaller
     * pub key to the endpoint with the larger pub key. If direction_reverse is
     * is true, the edge goes the other way.
     * @type {boolean}
     * @memberof LnrpcEdgeLocator
     */
    directionReverse?: boolean;
}

export function LnrpcEdgeLocatorFromJSON(json: any): LnrpcEdgeLocator {
    return LnrpcEdgeLocatorFromJSONTyped(json, false);
}

export function LnrpcEdgeLocatorFromJSONTyped(json: any, ignoreDiscriminator: boolean): LnrpcEdgeLocator {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelId': !exists(json, 'channel_id') ? undefined : json['channel_id'],
        'directionReverse': !exists(json, 'direction_reverse') ? undefined : json['direction_reverse'],
    };
}

export function LnrpcEdgeLocatorToJSON(value?: LnrpcEdgeLocator | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channel_id': value.channelId,
        'direction_reverse': value.directionReverse,
    };
}

