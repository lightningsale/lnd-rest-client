/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LnrpcHopHint
 */
export interface LnrpcHopHint {
    /**
     * The public key of the node at the start of the channel.
     * @type {string}
     * @memberof LnrpcHopHint
     */
    nodeId?: string;
    /**
     * The unique identifier of the channel.
     * @type {string}
     * @memberof LnrpcHopHint
     */
    chanId?: string;
    /**
     * The base fee of the channel denominated in millisatoshis.
     * @type {number}
     * @memberof LnrpcHopHint
     */
    feeBaseMsat?: number;
    /**
     * The fee rate of the channel for sending one satoshi across it denominated in
     * millionths of a satoshi.
     * @type {number}
     * @memberof LnrpcHopHint
     */
    feeProportionalMillionths?: number;
    /**
     * The time-lock delta of the channel.
     * @type {number}
     * @memberof LnrpcHopHint
     */
    cltvExpiryDelta?: number;
}

export function LnrpcHopHintFromJSON(json: any): LnrpcHopHint {
    return LnrpcHopHintFromJSONTyped(json, false);
}

export function LnrpcHopHintFromJSONTyped(json: any, ignoreDiscriminator: boolean): LnrpcHopHint {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nodeId': !exists(json, 'node_id') ? undefined : json['node_id'],
        'chanId': !exists(json, 'chan_id') ? undefined : json['chan_id'],
        'feeBaseMsat': !exists(json, 'fee_base_msat') ? undefined : json['fee_base_msat'],
        'feeProportionalMillionths': !exists(json, 'fee_proportional_millionths') ? undefined : json['fee_proportional_millionths'],
        'cltvExpiryDelta': !exists(json, 'cltv_expiry_delta') ? undefined : json['cltv_expiry_delta'],
    };
}

export function LnrpcHopHintToJSON(value?: LnrpcHopHint | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'node_id': value.nodeId,
        'chan_id': value.chanId,
        'fee_base_msat': value.feeBaseMsat,
        'fee_proportional_millionths': value.feeProportionalMillionths,
        'cltv_expiry_delta': value.cltvExpiryDelta,
    };
}

