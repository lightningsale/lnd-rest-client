/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LnrpcAMPRecord,
    LnrpcAMPRecordFromJSON,
    LnrpcAMPRecordFromJSONTyped,
    LnrpcAMPRecordToJSON,
    LnrpcMPPRecord,
    LnrpcMPPRecordFromJSON,
    LnrpcMPPRecordFromJSONTyped,
    LnrpcMPPRecordToJSON,
} from './';

/**
 * 
 * @export
 * @interface LnrpcHop
 */
export interface LnrpcHop {
    /**
     * The unique channel ID for the channel. The first 3 bytes are the block
     * height, the next 3 the index within the block, and the last 2 bytes are the
     * output index for the channel.
     * @type {string}
     * @memberof LnrpcHop
     */
    chanId?: string;
    /**
     * 
     * @type {string}
     * @memberof LnrpcHop
     */
    chanCapacity?: string;
    /**
     * 
     * @type {string}
     * @memberof LnrpcHop
     */
    amtToForward?: string;
    /**
     * 
     * @type {string}
     * @memberof LnrpcHop
     */
    fee?: string;
    /**
     * 
     * @type {number}
     * @memberof LnrpcHop
     */
    expiry?: number;
    /**
     * 
     * @type {string}
     * @memberof LnrpcHop
     */
    amtToForwardMsat?: string;
    /**
     * 
     * @type {string}
     * @memberof LnrpcHop
     */
    feeMsat?: string;
    /**
     * An optional public key of the hop. If the public key is given, the payment
     * can be executed without relying on a copy of the channel graph.
     * @type {string}
     * @memberof LnrpcHop
     */
    pubKey?: string;
    /**
     * If set to true, then this hop will be encoded using the new variable length
     * TLV format. Note that if any custom tlv_records below are specified, then
     * this field MUST be set to true for them to be encoded properly.
     * @type {boolean}
     * @memberof LnrpcHop
     */
    tlvPayload?: boolean;
    /**
     * 
     * @type {LnrpcMPPRecord}
     * @memberof LnrpcHop
     */
    mppRecord?: LnrpcMPPRecord;
    /**
     * 
     * @type {LnrpcAMPRecord}
     * @memberof LnrpcHop
     */
    ampRecord?: LnrpcAMPRecord;
    /**
     * An optional set of key-value TLV records. This is useful within the context
     * of the SendToRoute call as it allows callers to specify arbitrary K-V pairs
     * to drop off at each hop within the onion.
     * @type {{ [key: string]: string; }}
     * @memberof LnrpcHop
     */
    customRecords?: { [key: string]: string; };
}

export function LnrpcHopFromJSON(json: any): LnrpcHop {
    return LnrpcHopFromJSONTyped(json, false);
}

export function LnrpcHopFromJSONTyped(json: any, ignoreDiscriminator: boolean): LnrpcHop {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chanId': !exists(json, 'chan_id') ? undefined : json['chan_id'],
        'chanCapacity': !exists(json, 'chan_capacity') ? undefined : json['chan_capacity'],
        'amtToForward': !exists(json, 'amt_to_forward') ? undefined : json['amt_to_forward'],
        'fee': !exists(json, 'fee') ? undefined : json['fee'],
        'expiry': !exists(json, 'expiry') ? undefined : json['expiry'],
        'amtToForwardMsat': !exists(json, 'amt_to_forward_msat') ? undefined : json['amt_to_forward_msat'],
        'feeMsat': !exists(json, 'fee_msat') ? undefined : json['fee_msat'],
        'pubKey': !exists(json, 'pub_key') ? undefined : json['pub_key'],
        'tlvPayload': !exists(json, 'tlv_payload') ? undefined : json['tlv_payload'],
        'mppRecord': !exists(json, 'mpp_record') ? undefined : LnrpcMPPRecordFromJSON(json['mpp_record']),
        'ampRecord': !exists(json, 'amp_record') ? undefined : LnrpcAMPRecordFromJSON(json['amp_record']),
        'customRecords': !exists(json, 'custom_records') ? undefined : json['custom_records'],
    };
}

export function LnrpcHopToJSON(value?: LnrpcHop | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chan_id': value.chanId,
        'chan_capacity': value.chanCapacity,
        'amt_to_forward': value.amtToForward,
        'fee': value.fee,
        'expiry': value.expiry,
        'amt_to_forward_msat': value.amtToForwardMsat,
        'fee_msat': value.feeMsat,
        'pub_key': value.pubKey,
        'tlv_payload': value.tlvPayload,
        'mpp_record': LnrpcMPPRecordToJSON(value.mppRecord),
        'amp_record': LnrpcAMPRecordToJSON(value.ampRecord),
        'custom_records': value.customRecords,
    };
}

