/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LnrpcChannelOpenUpdate,
    LnrpcChannelOpenUpdateFromJSON,
    LnrpcChannelOpenUpdateFromJSONTyped,
    LnrpcChannelOpenUpdateToJSON,
    LnrpcPendingUpdate,
    LnrpcPendingUpdateFromJSON,
    LnrpcPendingUpdateFromJSONTyped,
    LnrpcPendingUpdateToJSON,
    LnrpcReadyForPsbtFunding,
    LnrpcReadyForPsbtFundingFromJSON,
    LnrpcReadyForPsbtFundingFromJSONTyped,
    LnrpcReadyForPsbtFundingToJSON,
} from './';

/**
 * 
 * @export
 * @interface LnrpcOpenStatusUpdate
 */
export interface LnrpcOpenStatusUpdate {
    /**
     * 
     * @type {LnrpcPendingUpdate}
     * @memberof LnrpcOpenStatusUpdate
     */
    chanPending?: LnrpcPendingUpdate;
    /**
     * 
     * @type {LnrpcChannelOpenUpdate}
     * @memberof LnrpcOpenStatusUpdate
     */
    chanOpen?: LnrpcChannelOpenUpdate;
    /**
     * 
     * @type {LnrpcReadyForPsbtFunding}
     * @memberof LnrpcOpenStatusUpdate
     */
    psbtFund?: LnrpcReadyForPsbtFunding;
    /**
     * The pending channel ID of the created channel. This value may be used to
     * further the funding flow manually via the FundingStateStep method.
     * @type {string}
     * @memberof LnrpcOpenStatusUpdate
     */
    pendingChanId?: string;
}

export function LnrpcOpenStatusUpdateFromJSON(json: any): LnrpcOpenStatusUpdate {
    return LnrpcOpenStatusUpdateFromJSONTyped(json, false);
}

export function LnrpcOpenStatusUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): LnrpcOpenStatusUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chanPending': !exists(json, 'chan_pending') ? undefined : LnrpcPendingUpdateFromJSON(json['chan_pending']),
        'chanOpen': !exists(json, 'chan_open') ? undefined : LnrpcChannelOpenUpdateFromJSON(json['chan_open']),
        'psbtFund': !exists(json, 'psbt_fund') ? undefined : LnrpcReadyForPsbtFundingFromJSON(json['psbt_fund']),
        'pendingChanId': !exists(json, 'pending_chan_id') ? undefined : json['pending_chan_id'],
    };
}

export function LnrpcOpenStatusUpdateToJSON(value?: LnrpcOpenStatusUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chan_pending': LnrpcPendingUpdateToJSON(value.chanPending),
        'chan_open': LnrpcChannelOpenUpdateToJSON(value.chanOpen),
        'psbt_fund': LnrpcReadyForPsbtFundingToJSON(value.psbtFund),
        'pending_chan_id': value.pendingChanId,
    };
}

