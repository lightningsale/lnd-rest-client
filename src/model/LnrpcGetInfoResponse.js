/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LnrpcChain from './LnrpcChain';
import LnrpcFeature from './LnrpcFeature';

/**
 * The LnrpcGetInfoResponse model module.
 * @module model/LnrpcGetInfoResponse
 * @version version not set
 */
class LnrpcGetInfoResponse {
    /**
     * Constructs a new <code>LnrpcGetInfoResponse</code>.
     * @alias module:model/LnrpcGetInfoResponse
     */
    constructor() { 
        LnrpcGetInfoResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcGetInfoResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcGetInfoResponse} obj Optional instance to populate.
     * @return {module:model/LnrpcGetInfoResponse} The populated <code>LnrpcGetInfoResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcGetInfoResponse();

            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('commit_hash')) {
                obj['commit_hash'] = ApiClient.convertToType(data['commit_hash'], 'String');
            }
            if (data.hasOwnProperty('identity_pubkey')) {
                obj['identity_pubkey'] = ApiClient.convertToType(data['identity_pubkey'], 'String');
            }
            if (data.hasOwnProperty('alias')) {
                obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
            }
            if (data.hasOwnProperty('color')) {
                obj['color'] = ApiClient.convertToType(data['color'], 'String');
            }
            if (data.hasOwnProperty('num_pending_channels')) {
                obj['num_pending_channels'] = ApiClient.convertToType(data['num_pending_channels'], 'Number');
            }
            if (data.hasOwnProperty('num_active_channels')) {
                obj['num_active_channels'] = ApiClient.convertToType(data['num_active_channels'], 'Number');
            }
            if (data.hasOwnProperty('num_inactive_channels')) {
                obj['num_inactive_channels'] = ApiClient.convertToType(data['num_inactive_channels'], 'Number');
            }
            if (data.hasOwnProperty('num_peers')) {
                obj['num_peers'] = ApiClient.convertToType(data['num_peers'], 'Number');
            }
            if (data.hasOwnProperty('block_height')) {
                obj['block_height'] = ApiClient.convertToType(data['block_height'], 'Number');
            }
            if (data.hasOwnProperty('block_hash')) {
                obj['block_hash'] = ApiClient.convertToType(data['block_hash'], 'String');
            }
            if (data.hasOwnProperty('best_header_timestamp')) {
                obj['best_header_timestamp'] = ApiClient.convertToType(data['best_header_timestamp'], 'String');
            }
            if (data.hasOwnProperty('synced_to_chain')) {
                obj['synced_to_chain'] = ApiClient.convertToType(data['synced_to_chain'], 'Boolean');
            }
            if (data.hasOwnProperty('synced_to_graph')) {
                obj['synced_to_graph'] = ApiClient.convertToType(data['synced_to_graph'], 'Boolean');
            }
            if (data.hasOwnProperty('testnet')) {
                obj['testnet'] = ApiClient.convertToType(data['testnet'], 'Boolean');
            }
            if (data.hasOwnProperty('chains')) {
                obj['chains'] = ApiClient.convertToType(data['chains'], [LnrpcChain]);
            }
            if (data.hasOwnProperty('uris')) {
                obj['uris'] = ApiClient.convertToType(data['uris'], ['String']);
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = ApiClient.convertToType(data['features'], {'String': LnrpcFeature});
            }
        }
        return obj;
    }


}

/**
 * The version of the LND software that the node is running.
 * @member {String} version
 */
LnrpcGetInfoResponse.prototype['version'] = undefined;

/**
 * The SHA1 commit hash that the daemon is compiled with.
 * @member {String} commit_hash
 */
LnrpcGetInfoResponse.prototype['commit_hash'] = undefined;

/**
 * The identity pubkey of the current node.
 * @member {String} identity_pubkey
 */
LnrpcGetInfoResponse.prototype['identity_pubkey'] = undefined;

/**
 * @member {String} alias
 */
LnrpcGetInfoResponse.prototype['alias'] = undefined;

/**
 * @member {String} color
 */
LnrpcGetInfoResponse.prototype['color'] = undefined;

/**
 * @member {Number} num_pending_channels
 */
LnrpcGetInfoResponse.prototype['num_pending_channels'] = undefined;

/**
 * @member {Number} num_active_channels
 */
LnrpcGetInfoResponse.prototype['num_active_channels'] = undefined;

/**
 * @member {Number} num_inactive_channels
 */
LnrpcGetInfoResponse.prototype['num_inactive_channels'] = undefined;

/**
 * @member {Number} num_peers
 */
LnrpcGetInfoResponse.prototype['num_peers'] = undefined;

/**
 * @member {Number} block_height
 */
LnrpcGetInfoResponse.prototype['block_height'] = undefined;

/**
 * @member {String} block_hash
 */
LnrpcGetInfoResponse.prototype['block_hash'] = undefined;

/**
 * @member {String} best_header_timestamp
 */
LnrpcGetInfoResponse.prototype['best_header_timestamp'] = undefined;

/**
 * @member {Boolean} synced_to_chain
 */
LnrpcGetInfoResponse.prototype['synced_to_chain'] = undefined;

/**
 * Whether we consider ourselves synced with the public channel graph.
 * @member {Boolean} synced_to_graph
 */
LnrpcGetInfoResponse.prototype['synced_to_graph'] = undefined;

/**
 * @member {Boolean} testnet
 */
LnrpcGetInfoResponse.prototype['testnet'] = undefined;

/**
 * @member {Array.<module:model/LnrpcChain>} chains
 */
LnrpcGetInfoResponse.prototype['chains'] = undefined;

/**
 * The URIs of the current node.
 * @member {Array.<String>} uris
 */
LnrpcGetInfoResponse.prototype['uris'] = undefined;

/**
 * Features that our node has advertised in our init message, node announcements and invoices.
 * @member {Object.<String, module:model/LnrpcFeature>} features
 */
LnrpcGetInfoResponse.prototype['features'] = undefined;






export default LnrpcGetInfoResponse;

