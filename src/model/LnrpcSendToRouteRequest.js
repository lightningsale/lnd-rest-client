/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LnrpcRoute from './LnrpcRoute';

/**
 * The LnrpcSendToRouteRequest model module.
 * @module model/LnrpcSendToRouteRequest
 * @version version not set
 */
class LnrpcSendToRouteRequest {
    /**
     * Constructs a new <code>LnrpcSendToRouteRequest</code>.
     * @alias module:model/LnrpcSendToRouteRequest
     */
    constructor() { 
        LnrpcSendToRouteRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcSendToRouteRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcSendToRouteRequest} obj Optional instance to populate.
     * @return {module:model/LnrpcSendToRouteRequest} The populated <code>LnrpcSendToRouteRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcSendToRouteRequest();

            if (data.hasOwnProperty('payment_hash')) {
                obj['payment_hash'] = ApiClient.convertToType(data['payment_hash'], 'Blob');
            }
            if (data.hasOwnProperty('payment_hash_string')) {
                obj['payment_hash_string'] = ApiClient.convertToType(data['payment_hash_string'], 'String');
            }
            if (data.hasOwnProperty('route')) {
                obj['route'] = LnrpcRoute.constructFromObject(data['route']);
            }
        }
        return obj;
    }


}

/**
 * The payment hash to use for the HTLC. When using REST, this field must be encoded as base64.
 * @member {Blob} payment_hash
 */
LnrpcSendToRouteRequest.prototype['payment_hash'] = undefined;

/**
 * An optional hex-encoded payment hash to be used for the HTLC. Deprecated now that the REST gateway supports base64 encoding of bytes fields.
 * @member {String} payment_hash_string
 */
LnrpcSendToRouteRequest.prototype['payment_hash_string'] = undefined;

/**
 * @member {module:model/LnrpcRoute} route
 */
LnrpcSendToRouteRequest.prototype['route'] = undefined;






export default LnrpcSendToRouteRequest;

