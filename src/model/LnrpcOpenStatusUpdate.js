/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LnrpcChannelOpenUpdate from './LnrpcChannelOpenUpdate';
import LnrpcPendingUpdate from './LnrpcPendingUpdate';
import LnrpcReadyForPsbtFunding from './LnrpcReadyForPsbtFunding';

/**
 * The LnrpcOpenStatusUpdate model module.
 * @module model/LnrpcOpenStatusUpdate
 * @version version not set
 */
class LnrpcOpenStatusUpdate {
    /**
     * Constructs a new <code>LnrpcOpenStatusUpdate</code>.
     * @alias module:model/LnrpcOpenStatusUpdate
     */
    constructor() { 
        LnrpcOpenStatusUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcOpenStatusUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcOpenStatusUpdate} obj Optional instance to populate.
     * @return {module:model/LnrpcOpenStatusUpdate} The populated <code>LnrpcOpenStatusUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcOpenStatusUpdate();

            if (data.hasOwnProperty('chan_pending')) {
                obj['chan_pending'] = LnrpcPendingUpdate.constructFromObject(data['chan_pending']);
            }
            if (data.hasOwnProperty('chan_open')) {
                obj['chan_open'] = LnrpcChannelOpenUpdate.constructFromObject(data['chan_open']);
            }
            if (data.hasOwnProperty('psbt_fund')) {
                obj['psbt_fund'] = LnrpcReadyForPsbtFunding.constructFromObject(data['psbt_fund']);
            }
            if (data.hasOwnProperty('pending_chan_id')) {
                obj['pending_chan_id'] = ApiClient.convertToType(data['pending_chan_id'], 'Blob');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/LnrpcPendingUpdate} chan_pending
 */
LnrpcOpenStatusUpdate.prototype['chan_pending'] = undefined;

/**
 * @member {module:model/LnrpcChannelOpenUpdate} chan_open
 */
LnrpcOpenStatusUpdate.prototype['chan_open'] = undefined;

/**
 * @member {module:model/LnrpcReadyForPsbtFunding} psbt_fund
 */
LnrpcOpenStatusUpdate.prototype['psbt_fund'] = undefined;

/**
 * The pending channel ID of the created channel. This value may be used to further the funding flow manually via the FundingStateStep method.
 * @member {Blob} pending_chan_id
 */
LnrpcOpenStatusUpdate.prototype['pending_chan_id'] = undefined;






export default LnrpcOpenStatusUpdate;

