/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelEventUpdateUpdateType from './ChannelEventUpdateUpdateType';
import LnrpcChannel from './LnrpcChannel';
import LnrpcChannelCloseSummary from './LnrpcChannelCloseSummary';
import LnrpcChannelPoint from './LnrpcChannelPoint';
import LnrpcPendingUpdate from './LnrpcPendingUpdate';

/**
 * The LnrpcChannelEventUpdate model module.
 * @module model/LnrpcChannelEventUpdate
 * @version version not set
 */
class LnrpcChannelEventUpdate {
    /**
     * Constructs a new <code>LnrpcChannelEventUpdate</code>.
     * @alias module:model/LnrpcChannelEventUpdate
     */
    constructor() { 
        LnrpcChannelEventUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcChannelEventUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcChannelEventUpdate} obj Optional instance to populate.
     * @return {module:model/LnrpcChannelEventUpdate} The populated <code>LnrpcChannelEventUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcChannelEventUpdate();

            if (data.hasOwnProperty('open_channel')) {
                obj['open_channel'] = LnrpcChannel.constructFromObject(data['open_channel']);
            }
            if (data.hasOwnProperty('closed_channel')) {
                obj['closed_channel'] = LnrpcChannelCloseSummary.constructFromObject(data['closed_channel']);
            }
            if (data.hasOwnProperty('active_channel')) {
                obj['active_channel'] = LnrpcChannelPoint.constructFromObject(data['active_channel']);
            }
            if (data.hasOwnProperty('inactive_channel')) {
                obj['inactive_channel'] = LnrpcChannelPoint.constructFromObject(data['inactive_channel']);
            }
            if (data.hasOwnProperty('pending_open_channel')) {
                obj['pending_open_channel'] = LnrpcPendingUpdate.constructFromObject(data['pending_open_channel']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ChannelEventUpdateUpdateType.constructFromObject(data['type']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/LnrpcChannel} open_channel
 */
LnrpcChannelEventUpdate.prototype['open_channel'] = undefined;

/**
 * @member {module:model/LnrpcChannelCloseSummary} closed_channel
 */
LnrpcChannelEventUpdate.prototype['closed_channel'] = undefined;

/**
 * @member {module:model/LnrpcChannelPoint} active_channel
 */
LnrpcChannelEventUpdate.prototype['active_channel'] = undefined;

/**
 * @member {module:model/LnrpcChannelPoint} inactive_channel
 */
LnrpcChannelEventUpdate.prototype['inactive_channel'] = undefined;

/**
 * @member {module:model/LnrpcPendingUpdate} pending_open_channel
 */
LnrpcChannelEventUpdate.prototype['pending_open_channel'] = undefined;

/**
 * @member {module:model/ChannelEventUpdateUpdateType} type
 */
LnrpcChannelEventUpdate.prototype['type'] = undefined;






export default LnrpcChannelEventUpdate;

