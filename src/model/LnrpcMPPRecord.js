/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LnrpcMPPRecord model module.
 * @module model/LnrpcMPPRecord
 * @version version not set
 */
class LnrpcMPPRecord {
    /**
     * Constructs a new <code>LnrpcMPPRecord</code>.
     * @alias module:model/LnrpcMPPRecord
     */
    constructor() { 
        LnrpcMPPRecord.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcMPPRecord</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcMPPRecord} obj Optional instance to populate.
     * @return {module:model/LnrpcMPPRecord} The populated <code>LnrpcMPPRecord</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcMPPRecord();

            if (data.hasOwnProperty('payment_addr')) {
                obj['payment_addr'] = ApiClient.convertToType(data['payment_addr'], 'Blob');
            }
            if (data.hasOwnProperty('total_amt_msat')) {
                obj['total_amt_msat'] = ApiClient.convertToType(data['total_amt_msat'], 'String');
            }
        }
        return obj;
    }


}

/**
 * A unique, random identifier used to authenticate the sender as the intended payer of a multi-path payment. The payment_addr must be the same for all subpayments, and match the payment_addr provided in the receiver's invoice. The same payment_addr must be used on all subpayments.
 * @member {Blob} payment_addr
 */
LnrpcMPPRecord.prototype['payment_addr'] = undefined;

/**
 * The total amount in milli-satoshis being sent as part of a larger multi-path payment. The caller is responsible for ensuring subpayments to the same node and payment_hash sum exactly to total_amt_msat. The same total_amt_msat must be used on all subpayments.
 * @member {String} total_amt_msat
 */
LnrpcMPPRecord.prototype['total_amt_msat'] = undefined;






export default LnrpcMPPRecord;

