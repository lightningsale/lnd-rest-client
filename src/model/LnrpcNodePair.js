/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LnrpcNodePair model module.
 * @module model/LnrpcNodePair
 * @version version not set
 */
class LnrpcNodePair {
    /**
     * Constructs a new <code>LnrpcNodePair</code>.
     * @alias module:model/LnrpcNodePair
     */
    constructor() { 
        LnrpcNodePair.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcNodePair</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcNodePair} obj Optional instance to populate.
     * @return {module:model/LnrpcNodePair} The populated <code>LnrpcNodePair</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcNodePair();

            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'Blob');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'Blob');
            }
        }
        return obj;
    }


}

/**
 * The sending node of the pair. When using REST, this field must be encoded as base64.
 * @member {Blob} from
 */
LnrpcNodePair.prototype['from'] = undefined;

/**
 * The receiving node of the pair. When using REST, this field must be encoded as base64.
 * @member {Blob} to
 */
LnrpcNodePair.prototype['to'] = undefined;






export default LnrpcNodePair;

