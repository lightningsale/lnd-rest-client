/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LnrpcAMPRecord from './LnrpcAMPRecord';
import LnrpcMPPRecord from './LnrpcMPPRecord';

/**
 * The LnrpcHop model module.
 * @module model/LnrpcHop
 * @version version not set
 */
class LnrpcHop {
    /**
     * Constructs a new <code>LnrpcHop</code>.
     * @alias module:model/LnrpcHop
     */
    constructor() { 
        LnrpcHop.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcHop</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcHop} obj Optional instance to populate.
     * @return {module:model/LnrpcHop} The populated <code>LnrpcHop</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcHop();

            if (data.hasOwnProperty('chan_id')) {
                obj['chan_id'] = ApiClient.convertToType(data['chan_id'], 'String');
            }
            if (data.hasOwnProperty('chan_capacity')) {
                obj['chan_capacity'] = ApiClient.convertToType(data['chan_capacity'], 'String');
            }
            if (data.hasOwnProperty('amt_to_forward')) {
                obj['amt_to_forward'] = ApiClient.convertToType(data['amt_to_forward'], 'String');
            }
            if (data.hasOwnProperty('fee')) {
                obj['fee'] = ApiClient.convertToType(data['fee'], 'String');
            }
            if (data.hasOwnProperty('expiry')) {
                obj['expiry'] = ApiClient.convertToType(data['expiry'], 'Number');
            }
            if (data.hasOwnProperty('amt_to_forward_msat')) {
                obj['amt_to_forward_msat'] = ApiClient.convertToType(data['amt_to_forward_msat'], 'String');
            }
            if (data.hasOwnProperty('fee_msat')) {
                obj['fee_msat'] = ApiClient.convertToType(data['fee_msat'], 'String');
            }
            if (data.hasOwnProperty('pub_key')) {
                obj['pub_key'] = ApiClient.convertToType(data['pub_key'], 'String');
            }
            if (data.hasOwnProperty('tlv_payload')) {
                obj['tlv_payload'] = ApiClient.convertToType(data['tlv_payload'], 'Boolean');
            }
            if (data.hasOwnProperty('mpp_record')) {
                obj['mpp_record'] = LnrpcMPPRecord.constructFromObject(data['mpp_record']);
            }
            if (data.hasOwnProperty('amp_record')) {
                obj['amp_record'] = LnrpcAMPRecord.constructFromObject(data['amp_record']);
            }
            if (data.hasOwnProperty('custom_records')) {
                obj['custom_records'] = ApiClient.convertToType(data['custom_records'], {'String': 'Blob'});
            }
        }
        return obj;
    }


}

/**
 * The unique channel ID for the channel. The first 3 bytes are the block height, the next 3 the index within the block, and the last 2 bytes are the output index for the channel.
 * @member {String} chan_id
 */
LnrpcHop.prototype['chan_id'] = undefined;

/**
 * @member {String} chan_capacity
 */
LnrpcHop.prototype['chan_capacity'] = undefined;

/**
 * @member {String} amt_to_forward
 */
LnrpcHop.prototype['amt_to_forward'] = undefined;

/**
 * @member {String} fee
 */
LnrpcHop.prototype['fee'] = undefined;

/**
 * @member {Number} expiry
 */
LnrpcHop.prototype['expiry'] = undefined;

/**
 * @member {String} amt_to_forward_msat
 */
LnrpcHop.prototype['amt_to_forward_msat'] = undefined;

/**
 * @member {String} fee_msat
 */
LnrpcHop.prototype['fee_msat'] = undefined;

/**
 * An optional public key of the hop. If the public key is given, the payment can be executed without relying on a copy of the channel graph.
 * @member {String} pub_key
 */
LnrpcHop.prototype['pub_key'] = undefined;

/**
 * If set to true, then this hop will be encoded using the new variable length TLV format. Note that if any custom tlv_records below are specified, then this field MUST be set to true for them to be encoded properly.
 * @member {Boolean} tlv_payload
 */
LnrpcHop.prototype['tlv_payload'] = undefined;

/**
 * @member {module:model/LnrpcMPPRecord} mpp_record
 */
LnrpcHop.prototype['mpp_record'] = undefined;

/**
 * @member {module:model/LnrpcAMPRecord} amp_record
 */
LnrpcHop.prototype['amp_record'] = undefined;

/**
 * An optional set of key-value TLV records. This is useful within the context of the SendToRoute call as it allows callers to specify arbitrary K-V pairs to drop off at each hop within the onion.
 * @member {Object.<String, Blob>} custom_records
 */
LnrpcHop.prototype['custom_records'] = undefined;






export default LnrpcHop;

