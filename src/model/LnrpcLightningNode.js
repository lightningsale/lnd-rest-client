/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LnrpcFeature from './LnrpcFeature';
import LnrpcNodeAddress from './LnrpcNodeAddress';

/**
 * The LnrpcLightningNode model module.
 * @module model/LnrpcLightningNode
 * @version version not set
 */
class LnrpcLightningNode {
    /**
     * Constructs a new <code>LnrpcLightningNode</code>.
     * An individual vertex/node within the channel graph. A node is connected to other nodes by one or more channel edges emanating from it. As the graph is directed, a node will also have an incoming edge attached to it for each outgoing edge.
     * @alias module:model/LnrpcLightningNode
     */
    constructor() { 
        LnrpcLightningNode.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcLightningNode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcLightningNode} obj Optional instance to populate.
     * @return {module:model/LnrpcLightningNode} The populated <code>LnrpcLightningNode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcLightningNode();

            if (data.hasOwnProperty('last_update')) {
                obj['last_update'] = ApiClient.convertToType(data['last_update'], 'Number');
            }
            if (data.hasOwnProperty('pub_key')) {
                obj['pub_key'] = ApiClient.convertToType(data['pub_key'], 'String');
            }
            if (data.hasOwnProperty('alias')) {
                obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
            }
            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = ApiClient.convertToType(data['addresses'], [LnrpcNodeAddress]);
            }
            if (data.hasOwnProperty('color')) {
                obj['color'] = ApiClient.convertToType(data['color'], 'String');
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = ApiClient.convertToType(data['features'], {'String': LnrpcFeature});
            }
        }
        return obj;
    }


}

/**
 * @member {Number} last_update
 */
LnrpcLightningNode.prototype['last_update'] = undefined;

/**
 * @member {String} pub_key
 */
LnrpcLightningNode.prototype['pub_key'] = undefined;

/**
 * @member {String} alias
 */
LnrpcLightningNode.prototype['alias'] = undefined;

/**
 * @member {Array.<module:model/LnrpcNodeAddress>} addresses
 */
LnrpcLightningNode.prototype['addresses'] = undefined;

/**
 * @member {String} color
 */
LnrpcLightningNode.prototype['color'] = undefined;

/**
 * @member {Object.<String, module:model/LnrpcFeature>} features
 */
LnrpcLightningNode.prototype['features'] = undefined;






export default LnrpcLightningNode;

