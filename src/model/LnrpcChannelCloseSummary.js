/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelCloseSummaryClosureType from './ChannelCloseSummaryClosureType';
import LnrpcInitiator from './LnrpcInitiator';
import LnrpcResolution from './LnrpcResolution';

/**
 * The LnrpcChannelCloseSummary model module.
 * @module model/LnrpcChannelCloseSummary
 * @version version not set
 */
class LnrpcChannelCloseSummary {
    /**
     * Constructs a new <code>LnrpcChannelCloseSummary</code>.
     * @alias module:model/LnrpcChannelCloseSummary
     */
    constructor() { 
        LnrpcChannelCloseSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcChannelCloseSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcChannelCloseSummary} obj Optional instance to populate.
     * @return {module:model/LnrpcChannelCloseSummary} The populated <code>LnrpcChannelCloseSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcChannelCloseSummary();

            if (data.hasOwnProperty('channel_point')) {
                obj['channel_point'] = ApiClient.convertToType(data['channel_point'], 'String');
            }
            if (data.hasOwnProperty('chan_id')) {
                obj['chan_id'] = ApiClient.convertToType(data['chan_id'], 'String');
            }
            if (data.hasOwnProperty('chain_hash')) {
                obj['chain_hash'] = ApiClient.convertToType(data['chain_hash'], 'String');
            }
            if (data.hasOwnProperty('closing_tx_hash')) {
                obj['closing_tx_hash'] = ApiClient.convertToType(data['closing_tx_hash'], 'String');
            }
            if (data.hasOwnProperty('remote_pubkey')) {
                obj['remote_pubkey'] = ApiClient.convertToType(data['remote_pubkey'], 'String');
            }
            if (data.hasOwnProperty('capacity')) {
                obj['capacity'] = ApiClient.convertToType(data['capacity'], 'String');
            }
            if (data.hasOwnProperty('close_height')) {
                obj['close_height'] = ApiClient.convertToType(data['close_height'], 'Number');
            }
            if (data.hasOwnProperty('settled_balance')) {
                obj['settled_balance'] = ApiClient.convertToType(data['settled_balance'], 'String');
            }
            if (data.hasOwnProperty('time_locked_balance')) {
                obj['time_locked_balance'] = ApiClient.convertToType(data['time_locked_balance'], 'String');
            }
            if (data.hasOwnProperty('close_type')) {
                obj['close_type'] = ChannelCloseSummaryClosureType.constructFromObject(data['close_type']);
            }
            if (data.hasOwnProperty('open_initiator')) {
                obj['open_initiator'] = LnrpcInitiator.constructFromObject(data['open_initiator']);
            }
            if (data.hasOwnProperty('close_initiator')) {
                obj['close_initiator'] = LnrpcInitiator.constructFromObject(data['close_initiator']);
            }
            if (data.hasOwnProperty('resolutions')) {
                obj['resolutions'] = ApiClient.convertToType(data['resolutions'], [LnrpcResolution]);
            }
        }
        return obj;
    }


}

/**
 * The outpoint (txid:index) of the funding transaction.
 * @member {String} channel_point
 */
LnrpcChannelCloseSummary.prototype['channel_point'] = undefined;

/**
 * The unique channel ID for the channel.
 * @member {String} chan_id
 */
LnrpcChannelCloseSummary.prototype['chan_id'] = undefined;

/**
 * The hash of the genesis block that this channel resides within.
 * @member {String} chain_hash
 */
LnrpcChannelCloseSummary.prototype['chain_hash'] = undefined;

/**
 * The txid of the transaction which ultimately closed this channel.
 * @member {String} closing_tx_hash
 */
LnrpcChannelCloseSummary.prototype['closing_tx_hash'] = undefined;

/**
 * Public key of the remote peer that we formerly had a channel with.
 * @member {String} remote_pubkey
 */
LnrpcChannelCloseSummary.prototype['remote_pubkey'] = undefined;

/**
 * Total capacity of the channel.
 * @member {String} capacity
 */
LnrpcChannelCloseSummary.prototype['capacity'] = undefined;

/**
 * Height at which the funding transaction was spent.
 * @member {Number} close_height
 */
LnrpcChannelCloseSummary.prototype['close_height'] = undefined;

/**
 * @member {String} settled_balance
 */
LnrpcChannelCloseSummary.prototype['settled_balance'] = undefined;

/**
 * @member {String} time_locked_balance
 */
LnrpcChannelCloseSummary.prototype['time_locked_balance'] = undefined;

/**
 * @member {module:model/ChannelCloseSummaryClosureType} close_type
 */
LnrpcChannelCloseSummary.prototype['close_type'] = undefined;

/**
 * @member {module:model/LnrpcInitiator} open_initiator
 */
LnrpcChannelCloseSummary.prototype['open_initiator'] = undefined;

/**
 * @member {module:model/LnrpcInitiator} close_initiator
 */
LnrpcChannelCloseSummary.prototype['close_initiator'] = undefined;

/**
 * @member {Array.<module:model/LnrpcResolution>} resolutions
 */
LnrpcChannelCloseSummary.prototype['resolutions'] = undefined;






export default LnrpcChannelCloseSummary;

