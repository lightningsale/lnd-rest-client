/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FailureFailureCode from './FailureFailureCode';
import LnrpcChannelUpdate from './LnrpcChannelUpdate';

/**
 * The LnrpcFailure model module.
 * @module model/LnrpcFailure
 * @version version not set
 */
class LnrpcFailure {
    /**
     * Constructs a new <code>LnrpcFailure</code>.
     * @alias module:model/LnrpcFailure
     */
    constructor() { 
        LnrpcFailure.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcFailure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcFailure} obj Optional instance to populate.
     * @return {module:model/LnrpcFailure} The populated <code>LnrpcFailure</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcFailure();

            if (data.hasOwnProperty('code')) {
                obj['code'] = FailureFailureCode.constructFromObject(data['code']);
            }
            if (data.hasOwnProperty('channel_update')) {
                obj['channel_update'] = LnrpcChannelUpdate.constructFromObject(data['channel_update']);
            }
            if (data.hasOwnProperty('htlc_msat')) {
                obj['htlc_msat'] = ApiClient.convertToType(data['htlc_msat'], 'String');
            }
            if (data.hasOwnProperty('onion_sha_256')) {
                obj['onion_sha_256'] = ApiClient.convertToType(data['onion_sha_256'], 'Blob');
            }
            if (data.hasOwnProperty('cltv_expiry')) {
                obj['cltv_expiry'] = ApiClient.convertToType(data['cltv_expiry'], 'Number');
            }
            if (data.hasOwnProperty('flags')) {
                obj['flags'] = ApiClient.convertToType(data['flags'], 'Number');
            }
            if (data.hasOwnProperty('failure_source_index')) {
                obj['failure_source_index'] = ApiClient.convertToType(data['failure_source_index'], 'Number');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/FailureFailureCode} code
 */
LnrpcFailure.prototype['code'] = undefined;

/**
 * @member {module:model/LnrpcChannelUpdate} channel_update
 */
LnrpcFailure.prototype['channel_update'] = undefined;

/**
 * A failure type-dependent htlc value.
 * @member {String} htlc_msat
 */
LnrpcFailure.prototype['htlc_msat'] = undefined;

/**
 * The sha256 sum of the onion payload.
 * @member {Blob} onion_sha_256
 */
LnrpcFailure.prototype['onion_sha_256'] = undefined;

/**
 * A failure type-dependent cltv expiry value.
 * @member {Number} cltv_expiry
 */
LnrpcFailure.prototype['cltv_expiry'] = undefined;

/**
 * A failure type-dependent flags value.
 * @member {Number} flags
 */
LnrpcFailure.prototype['flags'] = undefined;

/**
 * The position in the path of the intermediate or final node that generated the failure message. Position zero is the sender node.
 * @member {Number} failure_source_index
 */
LnrpcFailure.prototype['failure_source_index'] = undefined;

/**
 * A failure type-dependent block height.
 * @member {Number} height
 */
LnrpcFailure.prototype['height'] = undefined;






export default LnrpcFailure;

