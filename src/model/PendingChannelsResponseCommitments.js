/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PendingChannelsResponseCommitments model module.
 * @module model/PendingChannelsResponseCommitments
 * @version version not set
 */
class PendingChannelsResponseCommitments {
    /**
     * Constructs a new <code>PendingChannelsResponseCommitments</code>.
     * @alias module:model/PendingChannelsResponseCommitments
     */
    constructor() { 
        PendingChannelsResponseCommitments.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PendingChannelsResponseCommitments</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PendingChannelsResponseCommitments} obj Optional instance to populate.
     * @return {module:model/PendingChannelsResponseCommitments} The populated <code>PendingChannelsResponseCommitments</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PendingChannelsResponseCommitments();

            if (data.hasOwnProperty('local_txid')) {
                obj['local_txid'] = ApiClient.convertToType(data['local_txid'], 'String');
            }
            if (data.hasOwnProperty('remote_txid')) {
                obj['remote_txid'] = ApiClient.convertToType(data['remote_txid'], 'String');
            }
            if (data.hasOwnProperty('remote_pending_txid')) {
                obj['remote_pending_txid'] = ApiClient.convertToType(data['remote_pending_txid'], 'String');
            }
            if (data.hasOwnProperty('local_commit_fee_sat')) {
                obj['local_commit_fee_sat'] = ApiClient.convertToType(data['local_commit_fee_sat'], 'String');
            }
            if (data.hasOwnProperty('remote_commit_fee_sat')) {
                obj['remote_commit_fee_sat'] = ApiClient.convertToType(data['remote_commit_fee_sat'], 'String');
            }
            if (data.hasOwnProperty('remote_pending_commit_fee_sat')) {
                obj['remote_pending_commit_fee_sat'] = ApiClient.convertToType(data['remote_pending_commit_fee_sat'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Hash of the local version of the commitment tx.
 * @member {String} local_txid
 */
PendingChannelsResponseCommitments.prototype['local_txid'] = undefined;

/**
 * Hash of the remote version of the commitment tx.
 * @member {String} remote_txid
 */
PendingChannelsResponseCommitments.prototype['remote_txid'] = undefined;

/**
 * Hash of the remote pending version of the commitment tx.
 * @member {String} remote_pending_txid
 */
PendingChannelsResponseCommitments.prototype['remote_pending_txid'] = undefined;

/**
 * The amount in satoshis calculated to be paid in fees for the local commitment.
 * @member {String} local_commit_fee_sat
 */
PendingChannelsResponseCommitments.prototype['local_commit_fee_sat'] = undefined;

/**
 * The amount in satoshis calculated to be paid in fees for the remote commitment.
 * @member {String} remote_commit_fee_sat
 */
PendingChannelsResponseCommitments.prototype['remote_commit_fee_sat'] = undefined;

/**
 * The amount in satoshis calculated to be paid in fees for the remote pending commitment.
 * @member {String} remote_pending_commit_fee_sat
 */
PendingChannelsResponseCommitments.prototype['remote_pending_commit_fee_sat'] = undefined;






export default PendingChannelsResponseCommitments;

