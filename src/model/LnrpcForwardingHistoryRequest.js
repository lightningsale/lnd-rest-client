/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LnrpcForwardingHistoryRequest model module.
 * @module model/LnrpcForwardingHistoryRequest
 * @version version not set
 */
class LnrpcForwardingHistoryRequest {
    /**
     * Constructs a new <code>LnrpcForwardingHistoryRequest</code>.
     * @alias module:model/LnrpcForwardingHistoryRequest
     */
    constructor() { 
        LnrpcForwardingHistoryRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcForwardingHistoryRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcForwardingHistoryRequest} obj Optional instance to populate.
     * @return {module:model/LnrpcForwardingHistoryRequest} The populated <code>LnrpcForwardingHistoryRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcForwardingHistoryRequest();

            if (data.hasOwnProperty('start_time')) {
                obj['start_time'] = ApiClient.convertToType(data['start_time'], 'String');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'String');
            }
            if (data.hasOwnProperty('index_offset')) {
                obj['index_offset'] = ApiClient.convertToType(data['index_offset'], 'Number');
            }
            if (data.hasOwnProperty('num_max_events')) {
                obj['num_max_events'] = ApiClient.convertToType(data['num_max_events'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Start time is the starting point of the forwarding history request. All records beyond this point will be included, respecting the end time, and the index offset.
 * @member {String} start_time
 */
LnrpcForwardingHistoryRequest.prototype['start_time'] = undefined;

/**
 * End time is the end point of the forwarding history request. The response will carry at most 50k records between the start time and the end time. The index offset can be used to implement pagination.
 * @member {String} end_time
 */
LnrpcForwardingHistoryRequest.prototype['end_time'] = undefined;

/**
 * Index offset is the offset in the time series to start at. As each response can only contain 50k records, callers can use this to skip around within a packed time series.
 * @member {Number} index_offset
 */
LnrpcForwardingHistoryRequest.prototype['index_offset'] = undefined;

/**
 * The max number of events to return in the response to this query.
 * @member {Number} num_max_events
 */
LnrpcForwardingHistoryRequest.prototype['num_max_events'] = undefined;






export default LnrpcForwardingHistoryRequest;

