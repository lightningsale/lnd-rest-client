/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LnrpcPsbtShim model module.
 * @module model/LnrpcPsbtShim
 * @version version not set
 */
class LnrpcPsbtShim {
    /**
     * Constructs a new <code>LnrpcPsbtShim</code>.
     * @alias module:model/LnrpcPsbtShim
     */
    constructor() { 
        LnrpcPsbtShim.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LnrpcPsbtShim</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LnrpcPsbtShim} obj Optional instance to populate.
     * @return {module:model/LnrpcPsbtShim} The populated <code>LnrpcPsbtShim</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LnrpcPsbtShim();

            if (data.hasOwnProperty('pending_chan_id')) {
                obj['pending_chan_id'] = ApiClient.convertToType(data['pending_chan_id'], 'Blob');
            }
            if (data.hasOwnProperty('base_psbt')) {
                obj['base_psbt'] = ApiClient.convertToType(data['base_psbt'], 'Blob');
            }
            if (data.hasOwnProperty('no_publish')) {
                obj['no_publish'] = ApiClient.convertToType(data['no_publish'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * A unique identifier of 32 random bytes that will be used as the pending channel ID to identify the PSBT state machine when interacting with it and on the wire protocol to initiate the funding request.
 * @member {Blob} pending_chan_id
 */
LnrpcPsbtShim.prototype['pending_chan_id'] = undefined;

/**
 * An optional base PSBT the new channel output will be added to. If this is non-empty, it must be a binary serialized PSBT.
 * @member {Blob} base_psbt
 */
LnrpcPsbtShim.prototype['base_psbt'] = undefined;

/**
 * If a channel should be part of a batch (multiple channel openings in one transaction), it can be dangerous if the whole batch transaction is published too early before all channel opening negotiations are completed. This flag prevents this particular channel from broadcasting the transaction after the negotiation with the remote peer. In a batch of channel openings this flag should be set to true for every channel but the very last.
 * @member {Boolean} no_publish
 */
LnrpcPsbtShim.prototype['no_publish'] = undefined;






export default LnrpcPsbtShim;

