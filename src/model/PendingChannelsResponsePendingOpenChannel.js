/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PendingChannelsResponsePendingChannel from './PendingChannelsResponsePendingChannel';

/**
 * The PendingChannelsResponsePendingOpenChannel model module.
 * @module model/PendingChannelsResponsePendingOpenChannel
 * @version version not set
 */
class PendingChannelsResponsePendingOpenChannel {
    /**
     * Constructs a new <code>PendingChannelsResponsePendingOpenChannel</code>.
     * @alias module:model/PendingChannelsResponsePendingOpenChannel
     */
    constructor() { 
        PendingChannelsResponsePendingOpenChannel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PendingChannelsResponsePendingOpenChannel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PendingChannelsResponsePendingOpenChannel} obj Optional instance to populate.
     * @return {module:model/PendingChannelsResponsePendingOpenChannel} The populated <code>PendingChannelsResponsePendingOpenChannel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PendingChannelsResponsePendingOpenChannel();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = PendingChannelsResponsePendingChannel.constructFromObject(data['channel']);
            }
            if (data.hasOwnProperty('confirmation_height')) {
                obj['confirmation_height'] = ApiClient.convertToType(data['confirmation_height'], 'Number');
            }
            if (data.hasOwnProperty('commit_fee')) {
                obj['commit_fee'] = ApiClient.convertToType(data['commit_fee'], 'String');
            }
            if (data.hasOwnProperty('commit_weight')) {
                obj['commit_weight'] = ApiClient.convertToType(data['commit_weight'], 'String');
            }
            if (data.hasOwnProperty('fee_per_kw')) {
                obj['fee_per_kw'] = ApiClient.convertToType(data['fee_per_kw'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/PendingChannelsResponsePendingChannel} channel
 */
PendingChannelsResponsePendingOpenChannel.prototype['channel'] = undefined;

/**
 * @member {Number} confirmation_height
 */
PendingChannelsResponsePendingOpenChannel.prototype['confirmation_height'] = undefined;

/**
 * The amount calculated to be paid in fees for the current set of commitment transactions. The fee amount is persisted with the channel in order to allow the fee amount to be removed and recalculated with each channel state update, including updates that happen after a system restart.
 * @member {String} commit_fee
 */
PendingChannelsResponsePendingOpenChannel.prototype['commit_fee'] = undefined;

/**
 * @member {String} commit_weight
 */
PendingChannelsResponsePendingOpenChannel.prototype['commit_weight'] = undefined;

/**
 * The required number of satoshis per kilo-weight that the requester will pay at all times, for both the funding transaction and commitment transaction. This value can later be updated once the channel is open.
 * @member {String} fee_per_kw
 */
PendingChannelsResponsePendingOpenChannel.prototype['fee_per_kw'] = undefined;






export default PendingChannelsResponsePendingOpenChannel;

