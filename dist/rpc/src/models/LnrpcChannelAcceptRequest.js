"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
function LnrpcChannelAcceptRequestFromJSON(json) {
    return LnrpcChannelAcceptRequestFromJSONTyped(json, false);
}
exports.LnrpcChannelAcceptRequestFromJSON = LnrpcChannelAcceptRequestFromJSON;
function LnrpcChannelAcceptRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'nodePubkey': !runtime_1.exists(json, 'node_pubkey') ? undefined : json['node_pubkey'],
        'chainHash': !runtime_1.exists(json, 'chain_hash') ? undefined : json['chain_hash'],
        'pendingChanId': !runtime_1.exists(json, 'pending_chan_id') ? undefined : json['pending_chan_id'],
        'fundingAmt': !runtime_1.exists(json, 'funding_amt') ? undefined : json['funding_amt'],
        'pushAmt': !runtime_1.exists(json, 'push_amt') ? undefined : json['push_amt'],
        'dustLimit': !runtime_1.exists(json, 'dust_limit') ? undefined : json['dust_limit'],
        'maxValueInFlight': !runtime_1.exists(json, 'max_value_in_flight') ? undefined : json['max_value_in_flight'],
        'channelReserve': !runtime_1.exists(json, 'channel_reserve') ? undefined : json['channel_reserve'],
        'minHtlc': !runtime_1.exists(json, 'min_htlc') ? undefined : json['min_htlc'],
        'feePerKw': !runtime_1.exists(json, 'fee_per_kw') ? undefined : json['fee_per_kw'],
        'csvDelay': !runtime_1.exists(json, 'csv_delay') ? undefined : json['csv_delay'],
        'maxAcceptedHtlcs': !runtime_1.exists(json, 'max_accepted_htlcs') ? undefined : json['max_accepted_htlcs'],
        'channelFlags': !runtime_1.exists(json, 'channel_flags') ? undefined : json['channel_flags'],
    };
}
exports.LnrpcChannelAcceptRequestFromJSONTyped = LnrpcChannelAcceptRequestFromJSONTyped;
function LnrpcChannelAcceptRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'node_pubkey': value.nodePubkey,
        'chain_hash': value.chainHash,
        'pending_chan_id': value.pendingChanId,
        'funding_amt': value.fundingAmt,
        'push_amt': value.pushAmt,
        'dust_limit': value.dustLimit,
        'max_value_in_flight': value.maxValueInFlight,
        'channel_reserve': value.channelReserve,
        'min_htlc': value.minHtlc,
        'fee_per_kw': value.feePerKw,
        'csv_delay': value.csvDelay,
        'max_accepted_htlcs': value.maxAcceptedHtlcs,
        'channel_flags': value.channelFlags,
    };
}
exports.LnrpcChannelAcceptRequestToJSON = LnrpcChannelAcceptRequestToJSON;
