/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { InvoiceInvoiceState, LnrpcFeature, LnrpcInvoiceHTLC, LnrpcRouteHint } from './';
/**
 *
 * @export
 * @interface LnrpcInvoice
 */
export interface LnrpcInvoice {
    /**
     * An optional memo to attach along with the invoice. Used for record keeping
     * purposes for the invoice's creator, and will also be set in the description
     * field of the encoded payment request if the description_hash field is not
     * being used.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    memo?: string;
    /**
     * The hex-encoded preimage (32 byte) which will allow settling an incoming
     * HTLC payable to this preimage. When using REST, this field must be encoded
     * as base64.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    rPreimage?: string;
    /**
     * The hash of the preimage. When using REST, this field must be encoded as
     * base64.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    rHash?: string;
    /**
     * The fields value and value_msat are mutually exclusive.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    value?: string;
    /**
     * The fields value and value_msat are mutually exclusive.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    valueMsat?: string;
    /**
     *
     * @type {boolean}
     * @memberof LnrpcInvoice
     */
    settled?: boolean;
    /**
     *
     * @type {string}
     * @memberof LnrpcInvoice
     */
    creationDate?: string;
    /**
     *
     * @type {string}
     * @memberof LnrpcInvoice
     */
    settleDate?: string;
    /**
     * A bare-bones invoice for a payment within the Lightning Network. With the
     * details of the invoice, the sender has all the data necessary to send a
     * payment to the recipient.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    paymentRequest?: string;
    /**
     * Hash (SHA-256) of a description of the payment. Used if the description of
     * payment (memo) is too long to naturally fit within the description field
     * of an encoded payment request. When using REST, this field must be encoded
     * as base64.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    descriptionHash?: string;
    /**
     * Payment request expiry time in seconds. Default is 3600 (1 hour).
     * @type {string}
     * @memberof LnrpcInvoice
     */
    expiry?: string;
    /**
     * Fallback on-chain address.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    fallbackAddr?: string;
    /**
     * Delta to use for the time-lock of the CLTV extended to the final hop.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    cltvExpiry?: string;
    /**
     * Route hints that can each be individually used to assist in reaching the
     * invoice's destination.
     * @type {Array<LnrpcRouteHint>}
     * @memberof LnrpcInvoice
     */
    routeHints?: Array<LnrpcRouteHint>;
    /**
     * Whether this invoice should include routing hints for private channels.
     * @type {boolean}
     * @memberof LnrpcInvoice
     */
    _private?: boolean;
    /**
     * The "add" index of this invoice. Each newly created invoice will increment
     * this index making it monotonically increasing. Callers to the
     * SubscribeInvoices call can use this to instantly get notified of all added
     * invoices with an add_index greater than this one.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    addIndex?: string;
    /**
     * The "settle" index of this invoice. Each newly settled invoice will
     * increment this index making it monotonically increasing. Callers to the
     * SubscribeInvoices call can use this to instantly get notified of all
     * settled invoices with an settle_index greater than this one.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    settleIndex?: string;
    /**
     * Deprecated, use amt_paid_sat or amt_paid_msat.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    amtPaid?: string;
    /**
     * The amount that was accepted for this invoice, in satoshis. This will ONLY
     * be set if this invoice has been settled. We provide this field as if the
     * invoice was created with a zero value, then we need to record what amount
     * was ultimately accepted. Additionally, it's possible that the sender paid
     * MORE that was specified in the original invoice. So we'll record that here
     * as well.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    amtPaidSat?: string;
    /**
     * The amount that was accepted for this invoice, in millisatoshis. This will
     * ONLY be set if this invoice has been settled. We provide this field as if
     * the invoice was created with a zero value, then we need to record what
     * amount was ultimately accepted. Additionally, it's possible that the sender
     * paid MORE that was specified in the original invoice. So we'll record that
     * here as well.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    amtPaidMsat?: string;
    /**
     *
     * @type {InvoiceInvoiceState}
     * @memberof LnrpcInvoice
     */
    state?: InvoiceInvoiceState;
    /**
     * List of HTLCs paying to this invoice [EXPERIMENTAL].
     * @type {Array<LnrpcInvoiceHTLC>}
     * @memberof LnrpcInvoice
     */
    htlcs?: Array<LnrpcInvoiceHTLC>;
    /**
     * List of features advertised on the invoice.
     * @type {{ [key: string]: LnrpcFeature; }}
     * @memberof LnrpcInvoice
     */
    features?: {
        [key: string]: LnrpcFeature;
    };
    /**
     * Indicates if this invoice was a spontaneous payment that arrived via keysend
     * [EXPERIMENTAL].
     * @type {boolean}
     * @memberof LnrpcInvoice
     */
    isKeysend?: boolean;
    /**
     * The payment address of this invoice. This value will be used in MPP
     * payments, and also for newer invoies that always require the MPP paylaod
     * for added end-to-end security.
     * @type {string}
     * @memberof LnrpcInvoice
     */
    paymentAddr?: string;
    /**
     * Signals whether or not this is an AMP invoice.
     * @type {boolean}
     * @memberof LnrpcInvoice
     */
    isAmp?: boolean;
}
export declare function LnrpcInvoiceFromJSON(json: any): LnrpcInvoice;
export declare function LnrpcInvoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): LnrpcInvoice;
export declare function LnrpcInvoiceToJSON(value?: LnrpcInvoice | null): any;
