"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
function LnrpcChannelUpdateFromJSON(json) {
    return LnrpcChannelUpdateFromJSONTyped(json, false);
}
exports.LnrpcChannelUpdateFromJSON = LnrpcChannelUpdateFromJSON;
function LnrpcChannelUpdateFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'signature': !runtime_1.exists(json, 'signature') ? undefined : json['signature'],
        'chainHash': !runtime_1.exists(json, 'chain_hash') ? undefined : json['chain_hash'],
        'chanId': !runtime_1.exists(json, 'chan_id') ? undefined : json['chan_id'],
        'timestamp': !runtime_1.exists(json, 'timestamp') ? undefined : json['timestamp'],
        'messageFlags': !runtime_1.exists(json, 'message_flags') ? undefined : json['message_flags'],
        'channelFlags': !runtime_1.exists(json, 'channel_flags') ? undefined : json['channel_flags'],
        'timeLockDelta': !runtime_1.exists(json, 'time_lock_delta') ? undefined : json['time_lock_delta'],
        'htlcMinimumMsat': !runtime_1.exists(json, 'htlc_minimum_msat') ? undefined : json['htlc_minimum_msat'],
        'baseFee': !runtime_1.exists(json, 'base_fee') ? undefined : json['base_fee'],
        'feeRate': !runtime_1.exists(json, 'fee_rate') ? undefined : json['fee_rate'],
        'htlcMaximumMsat': !runtime_1.exists(json, 'htlc_maximum_msat') ? undefined : json['htlc_maximum_msat'],
        'extraOpaqueData': !runtime_1.exists(json, 'extra_opaque_data') ? undefined : json['extra_opaque_data'],
    };
}
exports.LnrpcChannelUpdateFromJSONTyped = LnrpcChannelUpdateFromJSONTyped;
function LnrpcChannelUpdateToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'signature': value.signature,
        'chain_hash': value.chainHash,
        'chan_id': value.chanId,
        'timestamp': value.timestamp,
        'message_flags': value.messageFlags,
        'channel_flags': value.channelFlags,
        'time_lock_delta': value.timeLockDelta,
        'htlc_minimum_msat': value.htlcMinimumMsat,
        'base_fee': value.baseFee,
        'fee_rate': value.feeRate,
        'htlc_maximum_msat': value.htlcMaximumMsat,
        'extra_opaque_data': value.extraOpaqueData,
    };
}
exports.LnrpcChannelUpdateToJSON = LnrpcChannelUpdateToJSON;
