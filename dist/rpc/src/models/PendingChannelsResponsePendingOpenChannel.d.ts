/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PendingChannelsResponsePendingChannel } from './';
/**
 *
 * @export
 * @interface PendingChannelsResponsePendingOpenChannel
 */
export interface PendingChannelsResponsePendingOpenChannel {
    /**
     *
     * @type {PendingChannelsResponsePendingChannel}
     * @memberof PendingChannelsResponsePendingOpenChannel
     */
    channel?: PendingChannelsResponsePendingChannel;
    /**
     *
     * @type {number}
     * @memberof PendingChannelsResponsePendingOpenChannel
     */
    confirmationHeight?: number;
    /**
     * The amount calculated to be paid in fees for the current set of
     * commitment transactions. The fee amount is persisted with the channel
     * in order to allow the fee amount to be removed and recalculated with
     * each channel state update, including updates that happen after a system
     * restart.
     * @type {string}
     * @memberof PendingChannelsResponsePendingOpenChannel
     */
    commitFee?: string;
    /**
     *
     * @type {string}
     * @memberof PendingChannelsResponsePendingOpenChannel
     */
    commitWeight?: string;
    /**
     * The required number of satoshis per kilo-weight that the requester will
     * pay at all times, for both the funding transaction and commitment
     * transaction. This value can later be updated once the channel is open.
     * @type {string}
     * @memberof PendingChannelsResponsePendingOpenChannel
     */
    feePerKw?: string;
}
export declare function PendingChannelsResponsePendingOpenChannelFromJSON(json: any): PendingChannelsResponsePendingOpenChannel;
export declare function PendingChannelsResponsePendingOpenChannelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PendingChannelsResponsePendingOpenChannel;
export declare function PendingChannelsResponsePendingOpenChannelToJSON(value?: PendingChannelsResponsePendingOpenChannel | null): any;
