"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
const _1 = require("./");
function PendingChannelsResponsePendingChannelFromJSON(json) {
    return PendingChannelsResponsePendingChannelFromJSONTyped(json, false);
}
exports.PendingChannelsResponsePendingChannelFromJSON = PendingChannelsResponsePendingChannelFromJSON;
function PendingChannelsResponsePendingChannelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'remoteNodePub': !runtime_1.exists(json, 'remote_node_pub') ? undefined : json['remote_node_pub'],
        'channelPoint': !runtime_1.exists(json, 'channel_point') ? undefined : json['channel_point'],
        'capacity': !runtime_1.exists(json, 'capacity') ? undefined : json['capacity'],
        'localBalance': !runtime_1.exists(json, 'local_balance') ? undefined : json['local_balance'],
        'remoteBalance': !runtime_1.exists(json, 'remote_balance') ? undefined : json['remote_balance'],
        'localChanReserveSat': !runtime_1.exists(json, 'local_chan_reserve_sat') ? undefined : json['local_chan_reserve_sat'],
        'remoteChanReserveSat': !runtime_1.exists(json, 'remote_chan_reserve_sat') ? undefined : json['remote_chan_reserve_sat'],
        'initiator': !runtime_1.exists(json, 'initiator') ? undefined : _1.LnrpcInitiatorFromJSON(json['initiator']),
        'commitmentType': !runtime_1.exists(json, 'commitment_type') ? undefined : _1.LnrpcCommitmentTypeFromJSON(json['commitment_type']),
    };
}
exports.PendingChannelsResponsePendingChannelFromJSONTyped = PendingChannelsResponsePendingChannelFromJSONTyped;
function PendingChannelsResponsePendingChannelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'remote_node_pub': value.remoteNodePub,
        'channel_point': value.channelPoint,
        'capacity': value.capacity,
        'local_balance': value.localBalance,
        'remote_balance': value.remoteBalance,
        'local_chan_reserve_sat': value.localChanReserveSat,
        'remote_chan_reserve_sat': value.remoteChanReserveSat,
        'initiator': _1.LnrpcInitiatorToJSON(value.initiator),
        'commitment_type': _1.LnrpcCommitmentTypeToJSON(value.commitmentType),
    };
}
exports.PendingChannelsResponsePendingChannelToJSON = PendingChannelsResponsePendingChannelToJSON;
