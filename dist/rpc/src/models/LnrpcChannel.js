"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
const _1 = require("./");
function LnrpcChannelFromJSON(json) {
    return LnrpcChannelFromJSONTyped(json, false);
}
exports.LnrpcChannelFromJSON = LnrpcChannelFromJSON;
function LnrpcChannelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'active': !runtime_1.exists(json, 'active') ? undefined : json['active'],
        'remotePubkey': !runtime_1.exists(json, 'remote_pubkey') ? undefined : json['remote_pubkey'],
        'channelPoint': !runtime_1.exists(json, 'channel_point') ? undefined : json['channel_point'],
        'chanId': !runtime_1.exists(json, 'chan_id') ? undefined : json['chan_id'],
        'capacity': !runtime_1.exists(json, 'capacity') ? undefined : json['capacity'],
        'localBalance': !runtime_1.exists(json, 'local_balance') ? undefined : json['local_balance'],
        'remoteBalance': !runtime_1.exists(json, 'remote_balance') ? undefined : json['remote_balance'],
        'commitFee': !runtime_1.exists(json, 'commit_fee') ? undefined : json['commit_fee'],
        'commitWeight': !runtime_1.exists(json, 'commit_weight') ? undefined : json['commit_weight'],
        'feePerKw': !runtime_1.exists(json, 'fee_per_kw') ? undefined : json['fee_per_kw'],
        'unsettledBalance': !runtime_1.exists(json, 'unsettled_balance') ? undefined : json['unsettled_balance'],
        'totalSatoshisSent': !runtime_1.exists(json, 'total_satoshis_sent') ? undefined : json['total_satoshis_sent'],
        'totalSatoshisReceived': !runtime_1.exists(json, 'total_satoshis_received') ? undefined : json['total_satoshis_received'],
        'numUpdates': !runtime_1.exists(json, 'num_updates') ? undefined : json['num_updates'],
        'pendingHtlcs': !runtime_1.exists(json, 'pending_htlcs') ? undefined : (json['pending_htlcs'].map(_1.LnrpcHTLCFromJSON)),
        'csvDelay': !runtime_1.exists(json, 'csv_delay') ? undefined : json['csv_delay'],
        '_private': !runtime_1.exists(json, 'private') ? undefined : json['private'],
        'initiator': !runtime_1.exists(json, 'initiator') ? undefined : json['initiator'],
        'chanStatusFlags': !runtime_1.exists(json, 'chan_status_flags') ? undefined : json['chan_status_flags'],
        'localChanReserveSat': !runtime_1.exists(json, 'local_chan_reserve_sat') ? undefined : json['local_chan_reserve_sat'],
        'remoteChanReserveSat': !runtime_1.exists(json, 'remote_chan_reserve_sat') ? undefined : json['remote_chan_reserve_sat'],
        'staticRemoteKey': !runtime_1.exists(json, 'static_remote_key') ? undefined : json['static_remote_key'],
        'commitmentType': !runtime_1.exists(json, 'commitment_type') ? undefined : _1.LnrpcCommitmentTypeFromJSON(json['commitment_type']),
        'lifetime': !runtime_1.exists(json, 'lifetime') ? undefined : json['lifetime'],
        'uptime': !runtime_1.exists(json, 'uptime') ? undefined : json['uptime'],
        'closeAddress': !runtime_1.exists(json, 'close_address') ? undefined : json['close_address'],
        'pushAmountSat': !runtime_1.exists(json, 'push_amount_sat') ? undefined : json['push_amount_sat'],
        'thawHeight': !runtime_1.exists(json, 'thaw_height') ? undefined : json['thaw_height'],
        'localConstraints': !runtime_1.exists(json, 'local_constraints') ? undefined : _1.LnrpcChannelConstraintsFromJSON(json['local_constraints']),
        'remoteConstraints': !runtime_1.exists(json, 'remote_constraints') ? undefined : _1.LnrpcChannelConstraintsFromJSON(json['remote_constraints']),
    };
}
exports.LnrpcChannelFromJSONTyped = LnrpcChannelFromJSONTyped;
function LnrpcChannelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'active': value.active,
        'remote_pubkey': value.remotePubkey,
        'channel_point': value.channelPoint,
        'chan_id': value.chanId,
        'capacity': value.capacity,
        'local_balance': value.localBalance,
        'remote_balance': value.remoteBalance,
        'commit_fee': value.commitFee,
        'commit_weight': value.commitWeight,
        'fee_per_kw': value.feePerKw,
        'unsettled_balance': value.unsettledBalance,
        'total_satoshis_sent': value.totalSatoshisSent,
        'total_satoshis_received': value.totalSatoshisReceived,
        'num_updates': value.numUpdates,
        'pending_htlcs': value.pendingHtlcs === undefined ? undefined : (value.pendingHtlcs.map(_1.LnrpcHTLCToJSON)),
        'csv_delay': value.csvDelay,
        'private': value._private,
        'initiator': value.initiator,
        'chan_status_flags': value.chanStatusFlags,
        'local_chan_reserve_sat': value.localChanReserveSat,
        'remote_chan_reserve_sat': value.remoteChanReserveSat,
        'static_remote_key': value.staticRemoteKey,
        'commitment_type': _1.LnrpcCommitmentTypeToJSON(value.commitmentType),
        'lifetime': value.lifetime,
        'uptime': value.uptime,
        'close_address': value.closeAddress,
        'push_amount_sat': value.pushAmountSat,
        'thaw_height': value.thawHeight,
        'local_constraints': _1.LnrpcChannelConstraintsToJSON(value.localConstraints),
        'remote_constraints': _1.LnrpcChannelConstraintsToJSON(value.remoteConstraints),
    };
}
exports.LnrpcChannelToJSON = LnrpcChannelToJSON;
