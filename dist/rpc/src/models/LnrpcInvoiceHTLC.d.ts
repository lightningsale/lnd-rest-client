/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { LnrpcAMP, LnrpcInvoiceHTLCState } from './';
/**
 *
 * @export
 * @interface LnrpcInvoiceHTLC
 */
export interface LnrpcInvoiceHTLC {
    /**
     * Short channel id over which the htlc was received.
     * @type {string}
     * @memberof LnrpcInvoiceHTLC
     */
    chanId?: string;
    /**
     * Index identifying the htlc on the channel.
     * @type {string}
     * @memberof LnrpcInvoiceHTLC
     */
    htlcIndex?: string;
    /**
     * The amount of the htlc in msat.
     * @type {string}
     * @memberof LnrpcInvoiceHTLC
     */
    amtMsat?: string;
    /**
     * Block height at which this htlc was accepted.
     * @type {number}
     * @memberof LnrpcInvoiceHTLC
     */
    acceptHeight?: number;
    /**
     * Time at which this htlc was accepted.
     * @type {string}
     * @memberof LnrpcInvoiceHTLC
     */
    acceptTime?: string;
    /**
     * Time at which this htlc was settled or canceled.
     * @type {string}
     * @memberof LnrpcInvoiceHTLC
     */
    resolveTime?: string;
    /**
     * Block height at which this htlc expires.
     * @type {number}
     * @memberof LnrpcInvoiceHTLC
     */
    expiryHeight?: number;
    /**
     *
     * @type {LnrpcInvoiceHTLCState}
     * @memberof LnrpcInvoiceHTLC
     */
    state?: LnrpcInvoiceHTLCState;
    /**
     * Custom tlv records.
     * @type {{ [key: string]: string; }}
     * @memberof LnrpcInvoiceHTLC
     */
    customRecords?: {
        [key: string]: string;
    };
    /**
     * The total amount of the mpp payment in msat.
     * @type {string}
     * @memberof LnrpcInvoiceHTLC
     */
    mppTotalAmtMsat?: string;
    /**
     *
     * @type {LnrpcAMP}
     * @memberof LnrpcInvoiceHTLC
     */
    amp?: LnrpcAMP;
}
export declare function LnrpcInvoiceHTLCFromJSON(json: any): LnrpcInvoiceHTLC;
export declare function LnrpcInvoiceHTLCFromJSONTyped(json: any, ignoreDiscriminator: boolean): LnrpcInvoiceHTLC;
export declare function LnrpcInvoiceHTLCToJSON(value?: LnrpcInvoiceHTLC | null): any;
