/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface LnrpcChannelConstraints
 */
export interface LnrpcChannelConstraints {
    /**
     * The CSV delay expressed in relative blocks. If the channel is force closed,
     * we will need to wait for this many blocks before we can regain our funds.
     * @type {number}
     * @memberof LnrpcChannelConstraints
     */
    csvDelay?: number;
    /**
     * The minimum satoshis this node is required to reserve in its balance.
     * @type {string}
     * @memberof LnrpcChannelConstraints
     */
    chanReserveSat?: string;
    /**
     * The dust limit (in satoshis) of the initiator's commitment tx.
     * @type {string}
     * @memberof LnrpcChannelConstraints
     */
    dustLimitSat?: string;
    /**
     * The maximum amount of coins in millisatoshis that can be pending in this
     * channel.
     * @type {string}
     * @memberof LnrpcChannelConstraints
     */
    maxPendingAmtMsat?: string;
    /**
     * The smallest HTLC in millisatoshis that the initiator will accept.
     * @type {string}
     * @memberof LnrpcChannelConstraints
     */
    minHtlcMsat?: string;
    /**
     * The total number of incoming HTLC's that the initiator will accept.
     * @type {number}
     * @memberof LnrpcChannelConstraints
     */
    maxAcceptedHtlcs?: number;
}
export declare function LnrpcChannelConstraintsFromJSON(json: any): LnrpcChannelConstraints;
export declare function LnrpcChannelConstraintsFromJSONTyped(json: any, ignoreDiscriminator: boolean): LnrpcChannelConstraints;
export declare function LnrpcChannelConstraintsToJSON(value?: LnrpcChannelConstraints | null): any;
