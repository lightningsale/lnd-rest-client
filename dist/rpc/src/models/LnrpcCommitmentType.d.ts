/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *  - LEGACY: A channel using the legacy commitment format having tweaked to_remote
 * keys.
 *  - STATIC_REMOTE_KEY: A channel that uses the modern commitment format where the key in the
 * output of the remote party does not change each state. This makes back
 * up and recovery easier as when the channel is closed, the funds go
 * directly to that key.
 *  - ANCHORS: A channel that uses a commitment format that has anchor outputs on the
 * commitments, allowing fee bumping after a force close transaction has
 * been broadcast.
 *  - UNKNOWN_COMMITMENT_TYPE: Returned when the commitment type isn't known or unavailable.
 * @export
 * @enum {string}
 */
export declare enum LnrpcCommitmentType {
    Legacy = "LEGACY",
    StaticRemoteKey = "STATIC_REMOTE_KEY",
    Anchors = "ANCHORS",
    UnknownCommitmentType = "UNKNOWN_COMMITMENT_TYPE"
}
export declare function LnrpcCommitmentTypeFromJSON(json: any): LnrpcCommitmentType;
export declare function LnrpcCommitmentTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): LnrpcCommitmentType;
export declare function LnrpcCommitmentTypeToJSON(value?: LnrpcCommitmentType | null): any;
