"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 *  - OUTCOME_UNKNOWN: Outcome unknown.
 *  - CLAIMED: An output was claimed on chain.
 *  - UNCLAIMED: An output was left unclaimed on chain.
 *  - ABANDONED: ResolverOutcomeAbandoned indicates that an output that we did not
 * claim on chain, for example an anchor that we did not sweep and a
 * third party claimed on chain, or a htlc that we could not decode
 * so left unclaimed.
 *  - FIRST_STAGE: If we force closed our channel, our htlcs need to be claimed in two
 * stages. This outcome represents the broadcast of a timeout or success
 * transaction for this two stage htlc claim.
 *  - TIMEOUT: A htlc was timed out on chain.
 * @export
 * @enum {string}
 */
var LnrpcResolutionOutcome;
(function (LnrpcResolutionOutcome) {
    LnrpcResolutionOutcome["OutcomeUnknown"] = "OUTCOME_UNKNOWN";
    LnrpcResolutionOutcome["Claimed"] = "CLAIMED";
    LnrpcResolutionOutcome["Unclaimed"] = "UNCLAIMED";
    LnrpcResolutionOutcome["Abandoned"] = "ABANDONED";
    LnrpcResolutionOutcome["FirstStage"] = "FIRST_STAGE";
    LnrpcResolutionOutcome["Timeout"] = "TIMEOUT";
})(LnrpcResolutionOutcome = exports.LnrpcResolutionOutcome || (exports.LnrpcResolutionOutcome = {}));
function LnrpcResolutionOutcomeFromJSON(json) {
    return LnrpcResolutionOutcomeFromJSONTyped(json, false);
}
exports.LnrpcResolutionOutcomeFromJSON = LnrpcResolutionOutcomeFromJSON;
function LnrpcResolutionOutcomeFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
exports.LnrpcResolutionOutcomeFromJSONTyped = LnrpcResolutionOutcomeFromJSONTyped;
function LnrpcResolutionOutcomeToJSON(value) {
    return value;
}
exports.LnrpcResolutionOutcomeToJSON = LnrpcResolutionOutcomeToJSON;
