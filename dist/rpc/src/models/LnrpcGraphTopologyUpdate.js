"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
const _1 = require("./");
function LnrpcGraphTopologyUpdateFromJSON(json) {
    return LnrpcGraphTopologyUpdateFromJSONTyped(json, false);
}
exports.LnrpcGraphTopologyUpdateFromJSON = LnrpcGraphTopologyUpdateFromJSON;
function LnrpcGraphTopologyUpdateFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'nodeUpdates': !runtime_1.exists(json, 'node_updates') ? undefined : (json['node_updates'].map(_1.LnrpcNodeUpdateFromJSON)),
        'channelUpdates': !runtime_1.exists(json, 'channel_updates') ? undefined : (json['channel_updates'].map(_1.LnrpcChannelEdgeUpdateFromJSON)),
        'closedChans': !runtime_1.exists(json, 'closed_chans') ? undefined : (json['closed_chans'].map(_1.LnrpcClosedChannelUpdateFromJSON)),
    };
}
exports.LnrpcGraphTopologyUpdateFromJSONTyped = LnrpcGraphTopologyUpdateFromJSONTyped;
function LnrpcGraphTopologyUpdateToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'node_updates': value.nodeUpdates === undefined ? undefined : (value.nodeUpdates.map(_1.LnrpcNodeUpdateToJSON)),
        'channel_updates': value.channelUpdates === undefined ? undefined : (value.channelUpdates.map(_1.LnrpcChannelEdgeUpdateToJSON)),
        'closed_chans': value.closedChans === undefined ? undefined : (value.closedChans.map(_1.LnrpcClosedChannelUpdateToJSON)),
    };
}
exports.LnrpcGraphTopologyUpdateToJSON = LnrpcGraphTopologyUpdateToJSON;
