"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
const _1 = require("./");
function PendingChannelsResponseWaitingCloseChannelFromJSON(json) {
    return PendingChannelsResponseWaitingCloseChannelFromJSONTyped(json, false);
}
exports.PendingChannelsResponseWaitingCloseChannelFromJSON = PendingChannelsResponseWaitingCloseChannelFromJSON;
function PendingChannelsResponseWaitingCloseChannelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'channel': !runtime_1.exists(json, 'channel') ? undefined : _1.PendingChannelsResponsePendingChannelFromJSON(json['channel']),
        'limboBalance': !runtime_1.exists(json, 'limbo_balance') ? undefined : json['limbo_balance'],
        'commitments': !runtime_1.exists(json, 'commitments') ? undefined : _1.PendingChannelsResponseCommitmentsFromJSON(json['commitments']),
    };
}
exports.PendingChannelsResponseWaitingCloseChannelFromJSONTyped = PendingChannelsResponseWaitingCloseChannelFromJSONTyped;
function PendingChannelsResponseWaitingCloseChannelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'channel': _1.PendingChannelsResponsePendingChannelToJSON(value.channel),
        'limbo_balance': value.limboBalance,
        'commitments': _1.PendingChannelsResponseCommitmentsToJSON(value.commitments),
    };
}
exports.PendingChannelsResponseWaitingCloseChannelToJSON = PendingChannelsResponseWaitingCloseChannelToJSON;
