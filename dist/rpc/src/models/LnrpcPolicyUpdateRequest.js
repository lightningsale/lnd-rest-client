"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * rpc.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
const _1 = require("./");
function LnrpcPolicyUpdateRequestFromJSON(json) {
    return LnrpcPolicyUpdateRequestFromJSONTyped(json, false);
}
exports.LnrpcPolicyUpdateRequestFromJSON = LnrpcPolicyUpdateRequestFromJSON;
function LnrpcPolicyUpdateRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'global': !runtime_1.exists(json, 'global') ? undefined : json['global'],
        'chanPoint': !runtime_1.exists(json, 'chan_point') ? undefined : _1.LnrpcChannelPointFromJSON(json['chan_point']),
        'baseFeeMsat': !runtime_1.exists(json, 'base_fee_msat') ? undefined : json['base_fee_msat'],
        'feeRate': !runtime_1.exists(json, 'fee_rate') ? undefined : json['fee_rate'],
        'timeLockDelta': !runtime_1.exists(json, 'time_lock_delta') ? undefined : json['time_lock_delta'],
        'maxHtlcMsat': !runtime_1.exists(json, 'max_htlc_msat') ? undefined : json['max_htlc_msat'],
        'minHtlcMsat': !runtime_1.exists(json, 'min_htlc_msat') ? undefined : json['min_htlc_msat'],
        'minHtlcMsatSpecified': !runtime_1.exists(json, 'min_htlc_msat_specified') ? undefined : json['min_htlc_msat_specified'],
    };
}
exports.LnrpcPolicyUpdateRequestFromJSONTyped = LnrpcPolicyUpdateRequestFromJSONTyped;
function LnrpcPolicyUpdateRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'global': value.global,
        'chan_point': _1.LnrpcChannelPointToJSON(value.chanPoint),
        'base_fee_msat': value.baseFeeMsat,
        'fee_rate': value.feeRate,
        'time_lock_delta': value.timeLockDelta,
        'max_htlc_msat': value.maxHtlcMsat,
        'min_htlc_msat': value.minHtlcMsat,
        'min_htlc_msat_specified': value.minHtlcMsatSpecified,
    };
}
exports.LnrpcPolicyUpdateRequestToJSON = LnrpcPolicyUpdateRequestToJSON;
